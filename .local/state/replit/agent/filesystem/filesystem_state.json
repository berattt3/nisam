{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Personal Web Application - Replit.md\n\n## Overview\n\nThis is a full-stack web application built with React (frontend) and Express.js (backend). The application appears to be a personal/romantic themed web interface with Turkish content, featuring an elegant purple design theme and interactive pages. It includes a modern tech stack with TypeScript, Tailwind CSS, shadcn/ui components, and Drizzle ORM for database operations.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\nNavigation preference: Sixth page set as homepage/landing page (default route \"/\" now points to sixth page).\nGame preference: Complex maze game with moving monsters as the primary game on homepage before the original platform game.\nNavigation buttons: Updated to show \"Diğer Sayfalar\" and \"2. Sayfa\" buttons on main page.\nNavigation flow: Sequential navigation established: Sixth page (homepage) → Landing page → Second page → Third page → Fourth page → Fifth page → Seventh page. The \"2. Sayfa\" button on homepage goes to landing page, then flows sequentially through numbered pages.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Styling**: Tailwind CSS with custom CSS variables for theming\n- **UI Components**: shadcn/ui component library (Radix UI primitives)\n- **Routing**: Wouter for client-side routing\n- **State Management**: React Query (@tanstack/react-query) for server state\n- **Build Tool**: Vite for development and building\n\n### Backend Architecture\n- **Framework**: Express.js with TypeScript\n- **Runtime**: Node.js with ES modules\n- **Database ORM**: Drizzle ORM configured for PostgreSQL\n- **Session Management**: Prepared for connect-pg-simple (PostgreSQL sessions)\n- **Development**: tsx for TypeScript execution in development\n\n### Project Structure\n```\n├── client/                 # Frontend React application\n│   ├── src/\n│   │   ├── components/     # Reusable UI components\n│   │   ├── pages/          # Route components\n│   │   ├── hooks/          # Custom React hooks\n│   │   └── lib/            # Utility functions and configurations\n├── server/                 # Backend Express application\n│   ├── routes.ts          # API route definitions\n│   ├── storage.ts         # Data access layer\n│   └── vite.ts            # Development server integration\n├── shared/                 # Shared TypeScript definitions\n│   └── schema.ts          # Database schema and types\n└── migrations/            # Database migration files\n```\n\n## Key Components\n\n### Database Schema\n- **Users Table**: Basic user authentication with username/password\n- **Schema Location**: `shared/schema.ts` using Drizzle ORM\n- **Database**: PostgreSQL (configured but can be adapted)\n- **Migrations**: Managed through Drizzle Kit\n\n### Authentication System\n- Prepared infrastructure for user authentication\n- In-memory storage implementation (MemStorage) for development\n- Interface-based storage design for easy database integration\n\n### UI Theme System\n- Custom purple-themed design with CSS variables\n- Elegant, romantic aesthetic with decorative hearts\n- Responsive design with mobile considerations\n- Glass morphism effects and smooth animations\n\n### Development Tools\n- Hot module replacement with Vite\n- TypeScript strict mode enabled\n- ESLint and development error overlays\n- Replit-specific development banner integration\n\n## Data Flow\n\n### Current Implementation\n1. **Client Routing**: Wouter handles client-side navigation\n2. **API Communication**: React Query manages server state and caching\n3. **Data Storage**: Interface-based storage system (currently in-memory)\n4. **State Management**: Local React state + React Query for server state\n\n### API Structure\n- RESTful API design pattern\n- JSON request/response format\n- Error handling middleware\n- Request logging for API endpoints\n\n## External Dependencies\n\n### Frontend Dependencies\n- **UI Framework**: React, React DOM\n- **Styling**: Tailwind CSS, PostCSS, Autoprefixer\n- **UI Components**: Radix UI primitives, Lucide React icons\n- **State Management**: TanStack React Query\n- **Routing**: Wouter\n- **Forms**: React Hook Form with Zod validation\n- **Utilities**: clsx, class-variance-authority, date-fns\n\n### Backend Dependencies\n- **Web Framework**: Express.js\n- **Database**: Drizzle ORM, @neondatabase/serverless\n- **Session Management**: connect-pg-simple\n- **Development**: tsx, esbuild\n- **Validation**: Zod with Drizzle integration\n\n### Development Tools\n- **Build**: Vite, esbuild\n- **TypeScript**: Full TypeScript support across stack\n- **Replit Integration**: Cartographer plugin, runtime error modal\n\n## Deployment Strategy\n\n### Build Process\n1. **Frontend**: Vite builds React app to `dist/public`\n2. **Backend**: esbuild bundles server code to `dist/index.js`\n3. **Database**: Drizzle migrations managed separately\n\n### Environment Configuration\n- **Development**: tsx server with Vite middleware integration\n- **Production**: Node.js serves bundled application\n- **Database**: PostgreSQL connection via DATABASE_URL environment variable\n\n### Hosting Considerations\n- **Static Assets**: Served from built frontend\n- **API Routes**: Express server handles `/api/*` routes\n- **Database**: Configured for Neon PostgreSQL (serverless)\n- **Sessions**: PostgreSQL-backed session storage\n\n### Scripts\n- `npm run dev`: Development with hot reloading\n- `npm run build`: Production build\n- `npm run start`: Production server\n- `npm run db:push`: Database schema updates\n\n## Recent Optimizations (August 2025)\n\n### Performance Improvements\n- **Loading Screen**: Added elegant loading animation with heartbeat effect\n- **Error Boundary**: Implemented React error boundary for graceful error handling\n- **Game Performance**: Optimized monster movement and collision detection algorithms\n- **Memory Management**: Reduced unnecessary re-renders and improved cleanup\n\n### Reliability Enhancements\n- **Rate Limiting**: Added simple rate limiting (100 requests/minute) to prevent abuse\n- **Health Check**: Added `/api/health` endpoint for monitoring\n- **Better Error Handling**: Enhanced API error responses with detailed messages\n- **Query Optimization**: Improved React Query configuration with smart retry logic\n\n### User Experience\n- **SEO Optimization**: Added proper meta tags, Open Graph tags for social sharing\n- **Turkish Language**: Set proper language attribute and localized loading text\n- **Responsive Design**: Maintained mobile-friendly interface throughout\n- **Error Recovery**: Automatic page reload option when errors occur\n\n### GitHub Pages Deployment Ready\n- **Static Build**: Complete frontend build in dist/public/ directory\n- **SPA Support**: 404.html and redirect handling for Single Page Application routing\n- **Asset Management**: Relative paths configured for GitHub Pages compatibility\n- **Jekyll Disabled**: .nojekyll file prevents Jekyll processing\n- **Automated Deployment**: GitHub Actions workflow ready (.github/workflows/deploy.yml)\n- **Manual Deployment**: Build script (build-frontend.sh) for manual uploads\n- **Documentation**: Complete setup guide (GITHUB_PAGES_SETUP.md)\n\n## Notes\n\n- The application currently uses in-memory storage but is designed to easily integrate with PostgreSQL\n- The romantic/personal theme suggests this is a custom application for a specific relationship context\n- Turkish language content indicates the target audience\n- All UI components follow the shadcn/ui design system for consistency\n- The codebase is well-structured for both development and production deployment\n- Optimized for sharing with friends - reliable performance and error handling","size_bytes":7747},"start-dev.sh":{"content":"#!/bin/bash\nexport NODE_ENV=development\ntsx server/index.ts","size_bytes":59},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      fontFamily: {\n        playfair: ['Playfair Display', 'serif'],\n        inter: ['Inter', 'sans-serif'],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        // Custom theme colors\n        brown: {\n          600: '#8B4513',\n          700: '#654321',\n          800: '#3D2814',\n        }\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        fadeIn: {\n          from: { opacity: \"0\", transform: \"translateY(20px)\" },\n          to: { opacity: \"1\", transform: \"translateY(0)\" },\n        },\n        float: {\n          \"0%, 100%\": { transform: \"translateY(0px) rotate(0deg)\" },\n          \"50%\": { transform: \"translateY(-10px) rotate(2deg)\" },\n        },\n        \"pulse-soft\": {\n          \"0%, 100%\": { opacity: \"0.6\", transform: \"scale(1)\" },\n          \"50%\": { opacity: \"0.9\", transform: \"scale(1.05)\" },\n        },\n        shimmer: {\n          \"0%\": { backgroundPosition: \"-200% 0\" },\n          \"100%\": { backgroundPosition: \"200% 0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\", \n        \"fade-in\": \"fadeIn 0.8s ease-out\",\n        \"float\": \"float 6s ease-in-out infinite\",\n        \"pulse-soft\": \"pulse-soft 3s ease-in-out infinite\",\n        \"shimmer\": \"shimmer 3s ease-in-out infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3077},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/dev.js":{"content":"#!/usr/bin/env node\nprocess.env.NODE_ENV = 'development';\nimport('./index.js');","size_bytes":79},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  const port = parseInt(process.env.PORT || \"5000\", 10);\n\n  server.listen(port, \"0.0.0.0\", () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":1619},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertWishSchema } from \"@shared/schema\";\n\n// Simple rate limiting\nconst requestCounts = new Map<string, { count: number; resetTime: number }>();\nconst RATE_LIMIT = 100; // requests per minute\nconst RATE_WINDOW = 60 * 1000; // 1 minute\n\nfunction rateLimit(req: any, res: any, next: any) {\n  const clientId = req.ip || 'unknown';\n  const now = Date.now();\n  \n  const clientData = requestCounts.get(clientId) || { count: 0, resetTime: now + RATE_WINDOW };\n  \n  if (now > clientData.resetTime) {\n    clientData.count = 0;\n    clientData.resetTime = now + RATE_WINDOW;\n  }\n  \n  clientData.count++;\n  requestCounts.set(clientId, clientData);\n  \n  if (clientData.count > RATE_LIMIT) {\n    return res.status(429).json({ error: \"Too many requests\" });\n  }\n  \n  next();\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Apply rate limiting to API routes\n  app.use('/api', rateLimit);\n\n  // Health check endpoint\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n  });\n\n  // Wish routes with better error handling\n  app.post(\"/api/wishes\", async (req, res) => {\n    try {\n      const validatedData = insertWishSchema.parse(req.body);\n      const wish = await storage.createWish(validatedData);\n      res.json(wish);\n    } catch (error) {\n      console.error(\"Error creating wish:\", error);\n      res.status(400).json({ \n        error: \"Invalid wish data\",\n        details: error instanceof Error ? error.message : \"Unknown error\"\n      });\n    }\n  });\n\n  app.get(\"/api/wishes\", async (req, res) => {\n    try {\n      const wishes = await storage.getAllWishes();\n      res.json(wishes);\n    } catch (error) {\n      console.error(\"Error fetching wishes:\", error);\n      res.status(500).json({ \n        error: \"Failed to fetch wishes\",\n        details: error instanceof Error ? error.message : \"Unknown error\"\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":2107},"server/storage.ts":{"content":"import { type User, type InsertUser, type Wish, type InsertWish } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  createWish(wish: InsertWish): Promise<Wish>;\n  getAllWishes(): Promise<Wish[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private wishes: Map<string, Wish>;\n\n  constructor() {\n    this.users = new Map();\n    this.wishes = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createWish(insertWish: InsertWish): Promise<Wish> {\n    const id = randomUUID();\n    const wish: Wish = { \n      ...insertWish, \n      id, \n      createdAt: new Date() \n    };\n    this.wishes.set(id, wish);\n    return wish;\n  }\n\n  async getAllWishes(): Promise<Wish[]> {\n    return Array.from(this.wishes.values()).sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1510},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const wishes = pgTable(\"wishes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  wishContent: text(\"wish_content\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertWishSchema = createInsertSchema(wishes).pick({\n  wishContent: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertWish = z.infer<typeof insertWishSchema>;\nexport type Wish = typeof wishes.$inferSelect;\n","size_bytes":1014},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ErrorBoundary } from \"@/components/error-boundary\";\nimport NotFound from \"@/pages/not-found\";\nimport Landing from \"@/pages/landing\";\nimport SecondPage from \"@/pages/second-page\";\nimport ThirdPage from \"@/pages/third-page\";\nimport FourthPage from \"@/pages/fourth-page\";\nimport FifthPage from \"@/pages/fifth-page\";\nimport SixthPage from \"@/pages/sixth-page\";\nimport SeventhPage from \"@/pages/seventh-page\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={SixthPage} />\n      <Route path=\"/landing\" component={Landing} />\n      <Route path=\"/second-page\" component={SecondPage} />\n      <Route path=\"/third-page\" component={ThirdPage} />\n      <Route path=\"/fourth-page\" component={FourthPage} />\n      <Route path=\"/fifth-page\" component={FifthPage} />\n      <Route path=\"/sixth-page\" component={SixthPage} />\n      <Route path=\"/seventh-page\" component={SeventhPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </QueryClientProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","size_bytes":1498},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Inter:wght@300;400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components; \n@tailwind utilities;\n\n:root {\n  --background: 0 0% 100%;\n  --foreground: 20 14.3% 4.1%;\n  --muted: 60 4.8% 95.9%;\n  --muted-foreground: 25 5.3% 44.7%;\n  --popover: 0 0% 100%;\n  --popover-foreground: 20 14.3% 4.1%;\n  --card: 0 0% 100%;\n  --card-foreground: 20 14.3% 4.1%;\n  --border: 20 5.9% 90%;\n  --input: 20 5.9% 90%;\n  --primary: 264 60% 55%;\n  --primary-foreground: 210 40% 98%;\n  --secondary: 60 4.8% 95.9%;\n  --secondary-foreground: 24 9.8% 10%;\n  --accent: 262 83% 70%;\n  --accent-foreground: 24 9.8% 10%;\n  --destructive: 0 84.2% 60.2%;\n  --destructive-foreground: 60 9.1% 97.8%;\n  --ring: 20 14.3% 4.1%;\n  --radius: 0.5rem;\n  \n  /* Custom elegant purple theme */\n  --purple-primary: hsl(264, 60%, 55%);\n  --purple-accent: hsl(262, 83%, 70%);\n  --purple-light: hsl(262, 73%, 82%);\n  --purple-dark: hsl(262, 52%, 40%);\n  --elegant-gray: hsl(220, 18%, 20%);\n  --soft-white: hsl(220, 36%, 98%);\n  --warm-gray: hsl(215, 16%, 47%);\n}\n\n.dark {\n  --background: 240 10% 3.9%;\n  --foreground: 0 0% 98%;\n  --muted: 240 3.7% 15.9%;\n  --muted-foreground: 240 5% 64.9%;\n  --popover: 240 10% 3.9%;\n  --popover-foreground: 0 0% 98%;\n  --card: 240 10% 3.9%;\n  --card-foreground: 0 0% 98%;\n  --border: 240 3.7% 15.9%;\n  --input: 240 3.7% 15.9%;\n  --primary: 264 60% 55%;\n  --primary-foreground: 210 40% 98%;\n  --secondary: 240 3.7% 15.9%;\n  --secondary-foreground: 0 0% 98%;\n  --accent: 262 83% 70%;\n  --accent-foreground: 0 0% 98%;\n  --destructive: 0 62.8% 30.6%;\n  --destructive-foreground: 0 0% 98%;\n  --ring: 240 4.9% 83.9%;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .gradient-bg {\n    background: linear-gradient(135deg, \n      hsl(260, 20%, 12%) 0%, \n      hsl(264, 30%, 18%) 25%, \n      hsl(268, 35%, 22%) 50%, \n      hsl(264, 30%, 18%) 75%, \n      hsl(260, 20%, 12%) 100%\n    );\n  }\n  \n  .glass-effect {\n    backdrop-filter: blur(20px) saturate(180%);\n    background: rgba(255, 255, 255, 0.92);\n    border: 1px solid rgba(255, 255, 255, 0.25);\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25), \n                0 0 0 1px rgba(255, 255, 255, 0.1);\n  }\n  \n  .heart-decoration {\n    color: var(--purple-accent);\n    filter: drop-shadow(0 8px 16px rgba(139, 92, 246, 0.4)) \n            drop-shadow(0 4px 8px rgba(139, 92, 246, 0.2));\n    text-shadow: 0 0 20px rgba(139, 92, 246, 0.6);\n  }\n  \n  .shimmer-heart {\n    background: linear-gradient(90deg, \n      transparent 0%, \n      rgba(139, 92, 246, 0.4) 50%, \n      transparent 100%);\n    background-size: 200% 100%;\n    animation: shimmer 3s ease-in-out infinite;\n    -webkit-background-clip: text;\n    background-clip: text;\n    color: transparent;\n  }\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg); \n  }\n  50% { \n    transform: translateY(-10px) rotate(2deg); \n  }\n}\n\n@keyframes pulse-soft {\n  0%, 100% { \n    opacity: 0.6; \n    transform: scale(1); \n  }\n  50% { \n    opacity: 0.9; \n    transform: scale(1.05); \n  }\n}\n\n@keyframes fadeIn {\n  from { \n    opacity: 0; \n    transform: translateY(20px); \n  }\n  to { \n    opacity: 1; \n    transform: translateY(0); \n  }\n}\n\n@keyframes shimmer {\n  0% { \n    background-position: -200% 0; \n  }\n  100% { \n    background-position: 200% 0; \n  }\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n.animate-pulse-soft {\n  animation: pulse-soft 3s ease-in-out infinite;\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.8s ease-out;\n}\n\n.font-playfair {\n  font-family: 'Playfair Display', serif;\n}\n\n.font-inter {\n  font-family: 'Inter', sans-serif;\n}\n\n/* Film sahnesi animasyonları */\n@keyframes textGlow {\n  0% { \n    opacity: 0; \n    filter: blur(10px);\n    transform: translateY(30px) scale(0.8);\n  }\n  50% {\n    opacity: 0.7;\n    filter: blur(5px);\n    transform: translateY(15px) scale(0.9);\n  }\n  100% { \n    opacity: 1; \n    filter: blur(0px);\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes slideInFromBottom {\n  0% { \n    transform: translateY(50px); \n    opacity: 0; \n  }\n  100% { \n    transform: translateY(0); \n    opacity: 1; \n  }\n}\n\n@keyframes finalQuestionEntrance {\n  0% { \n    opacity: 0; \n    transform: scale(0.5) rotate(-5deg);\n    filter: blur(20px);\n  }\n  50% {\n    opacity: 0.8;\n    transform: scale(1.1) rotate(2deg);\n    filter: blur(5px);\n  }\n  100% { \n    opacity: 1; \n    transform: scale(1) rotate(0deg);\n    filter: blur(0px);\n  }\n}\n\n@keyframes heartbeat {\n  0%, 100% { \n    transform: scale(1); \n  }\n  50% { \n    transform: scale(1.05); \n  }\n}\n\n@keyframes sparkleFloat {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg); \n    opacity: 1;\n  }\n  50% { \n    transform: translateY(-20px) rotate(180deg); \n    opacity: 0.7;\n  }\n}\n\n@keyframes typewriter {\n  from { \n    width: 0; \n  }\n  to { \n    width: 100%; \n  }\n}\n\n.text-shadow-glow {\n  text-shadow: 0 0 20px rgba(255, 255, 255, 0.8), \n               0 0 40px rgba(147, 51, 234, 0.6), \n               0 0 60px rgba(236, 72, 153, 0.4);\n}\n\n/* Konfetti ve kutlama animasyonları */\n@keyframes confettiFall {\n  0% { \n    transform: translateY(-100vh) rotate(0deg); \n    opacity: 1; \n  }\n  100% { \n    transform: translateY(100vh) rotate(720deg); \n    opacity: 0; \n  }\n}\n\n@keyframes confettiSpin {\n  0% { \n    transform: rotate(0deg) scale(1); \n  }\n  50% { \n    transform: rotate(180deg) scale(1.2); \n  }\n  100% { \n    transform: rotate(360deg) scale(1); \n  }\n}\n\n@keyframes heartFloat {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg); \n    opacity: 0.7; \n  }\n  50% { \n    transform: translateY(-30px) rotate(180deg); \n    opacity: 1; \n  }\n}\n\n@keyframes heartPulse {\n  0%, 100% { \n    transform: scale(1); \n  }\n  50% { \n    transform: scale(1.3); \n  }\n}\n\n@keyframes burstExplosion {\n  0% { \n    transform: scale(0) rotate(0deg); \n    opacity: 1; \n  }\n  50% {\n    transform: scale(1) rotate(180deg);\n    opacity: 0.8;\n  }\n  100% { \n    transform: scale(3) rotate(360deg); \n    opacity: 0; \n  }\n}\n\n@keyframes ringExpansion {\n  0% { \n    width: 0; \n    height: 0; \n    opacity: 1; \n  }\n  50% {\n    opacity: 0.6;\n  }\n  100% { \n    width: 500px; \n    height: 500px; \n    opacity: 0; \n  }\n}\n\n@keyframes celebrationBounce {\n  0% { \n    transform: translateY(0px) scale(1); \n  }\n  100% { \n    transform: translateY(-20px) scale(1.1); \n  }\n}\n\n@keyframes celebrationGlow {\n  0%, 100% { \n    filter: drop-shadow(0 0 20px rgba(255, 192, 203, 0.8)); \n  }\n  50% { \n    filter: drop-shadow(0 0 40px rgba(255, 20, 147, 1)); \n  }\n}\n\n@keyframes celebrationText {\n  0% { \n    transform: scale(1); \n  }\n  100% { \n    transform: scale(1.05); \n  }\n}\n\n@keyframes celebrationIcons {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg) scale(1); \n  }\n  50% { \n    transform: translateY(-15px) rotate(180deg) scale(1.2); \n  }\n}\n\n/* Final hikaye animasyonları */\n@keyframes finalStoryGlow {\n  0% { \n    opacity: 0; \n    filter: blur(15px);\n    transform: translateY(40px) scale(0.7);\n  }\n  40% {\n    opacity: 0.6;\n    filter: blur(8px);\n    transform: translateY(20px) scale(0.85);\n  }\n  100% { \n    opacity: 1; \n    filter: blur(0px);\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes finalEndGlow {\n  0% { \n    opacity: 0; \n    transform: scale(0.5);\n    filter: blur(20px);\n  }\n  50% {\n    opacity: 0.8;\n    transform: scale(1.1);\n    filter: blur(5px);\n  }\n  100% { \n    opacity: 1; \n    transform: scale(1);\n    filter: blur(0px);\n  }\n}\n\n/* Line clamp utility */\n.line-clamp-4 {\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n}\n","size_bytes":7702},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/decorative-hearts.tsx":{"content":"export default function DecorativeHearts() {\n  return (\n    <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\n      {/* Large floating heart - top right */}\n      <div className=\"absolute top-20 right-16 text-6xl heart-decoration animate-float opacity-20\">\n        ♡\n      </div>\n      \n      {/* Medium floating heart - left side */}\n      <div \n        className=\"absolute top-1/3 left-12 text-4xl heart-decoration animate-pulse-soft opacity-30\"\n        style={{ animationDelay: '1s' }}\n      >\n        ♡\n      </div>\n      \n      {/* Small hearts scattered */}\n      <div \n        className=\"absolute bottom-32 right-1/4 text-2xl heart-decoration animate-float opacity-25\"\n        style={{ animationDelay: '2s' }}\n      >\n        ♡\n      </div>\n      \n      <div \n        className=\"absolute top-1/2 right-8 text-3xl heart-decoration animate-pulse-soft opacity-20\"\n        style={{ animationDelay: '3s' }}\n      >\n        ♡\n      </div>\n      \n      <div \n        className=\"absolute bottom-20 left-1/3 text-2xl heart-decoration animate-float opacity-30\"\n        style={{ animationDelay: '4s' }}\n      >\n        ♡\n      </div>\n      \n      {/* Additional hearts for more elegance */}\n      <div \n        className=\"absolute top-16 left-1/4 text-xl heart-decoration animate-pulse-soft opacity-15\"\n        style={{ animationDelay: '5s' }}\n      >\n        ♡\n      </div>\n      \n      <div \n        className=\"absolute bottom-40 right-12 text-2xl heart-decoration animate-float opacity-20\"\n        style={{ animationDelay: '6s' }}\n      >\n        ♡\n      </div>\n    </div>\n  );\n}\n","size_bytes":1611},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: 5 * 60 * 1000, // 5 minutes cache\n      retry: (failureCount, error) => {\n        // Retry up to 2 times for network errors, but not for 4xx errors\n        if (failureCount >= 2) return false;\n        if (error instanceof Error && error.message.includes('4')) return false;\n        return true;\n      },\n      retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 30000),\n    },\n    mutations: {\n      retry: (failureCount, error) => {\n        // Only retry mutations for 5xx errors, not client errors\n        if (failureCount >= 1) return false;\n        if (error instanceof Error && error.message.includes('4')) return false;\n        return true;\n      },\n    },\n  },\n});\n","size_bytes":1976},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/fifth-page.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport DecorativeHearts from \"@/components/decorative-hearts\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { Eye, EyeOff } from \"lucide-react\";\n\nexport default function FifthPage() {\n  const [, setLocation] = useLocation();\n  const [wishText, setWishText] = useState(\"\");\n  const [isHidden, setIsHidden] = useState(false);\n  const [wishSubmitted, setWishSubmitted] = useState(false);\n  const { toast } = useToast();\n\n  const createWishMutation = useMutation({\n    mutationFn: (wishContent: string) =>\n      apiRequest(\"POST\", \"/api/wishes\", { wishContent }),\n    onSuccess: () => {\n      setWishSubmitted(true);\n      queryClient.invalidateQueries({ queryKey: [\"/api/wishes\"] });\n      toast({\n        title: \"Dilek kaydedildi ♡\",\n        description: \"Dileğin başarıyla kaydedildi!\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Hata\",\n        description: \"Dilek kaydedilirken bir hata oluştu.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const goBackToFourth = () => {\n    setLocation(\"/fourth-page\");\n  };\n\n  const goBackToFirst = () => {\n    setLocation(\"/\");\n  };\n\n  const handleSubmit = () => {\n    if (wishText.trim()) {\n      createWishMutation.mutate(wishText.trim());\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit();\n    }\n  };\n\n  const toggleVisibility = () => {\n    setIsHidden(!isHidden);\n  };\n\n  return (\n    <div className=\"min-h-screen gradient-bg font-inter\">\n      <DecorativeHearts />\n      \n      <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n        <div className=\"w-full max-w-4xl\">\n          <div className=\"glass-effect rounded-3xl shadow-2xl p-8 md:p-12 text-center animate-fade-in\">\n            \n            <h1 className=\"font-playfair text-4xl md:text-5xl font-bold text-[var(--elegant-gray)] mb-8\">\n              ♡\n            </h1>\n            \n            <div className=\"w-32 h-0.5 bg-gradient-to-r from-[var(--purple-primary)] via-[var(--purple-accent)] to-[var(--purple-primary)] mx-auto mb-10 rounded-full opacity-70\"></div>\n            \n            {!wishSubmitted ? (\n              <div className=\"mb-12\">\n                <div className=\"text-6xl heart-decoration mb-8 animate-pulse-soft\">♡</div>\n                \n                <h2 className=\"font-playfair text-2xl md:text-3xl font-bold text-[var(--purple-primary)] mb-6\">\n                  Dilek Tut ♡\n                </h2>\n                \n                <p className=\"font-inter text-lg md:text-xl text-[var(--warm-gray)] mb-10 leading-relaxed max-w-3xl mx-auto\">\n                  Benimle ilgili veya şuan bize ilgili en çok ne istersin?\n                </p>\n                \n                {/* Wish Input Area */}\n                <div className=\"max-w-2xl mx-auto mb-8\">\n                  <div className=\"relative\">\n                    <Textarea\n                      placeholder=\"Dileğini buraya yaz... (Enter'a basarak gönderebilirsin)\"\n                      value={wishText}\n                      onChange={(e) => setWishText(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                      className={`min-h-32 text-lg resize-none border-2 border-[var(--purple-accent)]/30 focus:border-[var(--purple-primary)] rounded-2xl p-6 bg-white/95 backdrop-blur-sm shadow-lg transition-all duration-300 ${\n                        isHidden ? 'filter blur-sm' : ''\n                      }`}\n                      disabled={createWishMutation.isPending}\n                    />\n                    \n                    {/* Visibility Toggle */}\n                    <button\n                      onClick={toggleVisibility}\n                      className=\"absolute top-4 right-4 p-2 text-[var(--purple-primary)] hover:text-[var(--purple-accent)] transition-colors duration-200\"\n                      title={isHidden ? \"Metni göster\" : \"Metni gizle\"}\n                    >\n                      {isHidden ? <EyeOff size={20} /> : <Eye size={20} />}\n                    </button>\n                  </div>\n                  \n                  <div className=\"flex justify-between items-center mt-4 text-sm text-[var(--warm-gray)]\">\n                    <span>{wishText.length} karakter</span>\n                    <span>Enter ile gönder</span>\n                  </div>\n                </div>\n\n                {/* Submit Button */}\n                <div className=\"mb-8\">\n                  <Button\n                    onClick={handleSubmit}\n                    disabled={!wishText.trim() || createWishMutation.isPending}\n                    className=\"px-16 py-5 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white font-inter font-semibold text-lg rounded-full transition-all duration-500 transform hover:scale-105 shadow-lg hover:shadow-2xl disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n                  >\n                    {createWishMutation.isPending ? (\n                      <span className=\"flex items-center space-x-2\">\n                        <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                        <span>Kaydediliyor...</span>\n                      </span>\n                    ) : (\n                      \"Dileği Kaydet ♡\"\n                    )}\n                  </Button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"mb-12\">\n                <div className=\"text-7xl mb-6\">💖✨💖</div>\n                <h2 className=\"font-playfair text-3xl md:text-4xl font-bold text-[var(--purple-primary)] mb-6\">\n                  Dileğin Kaydedildi! ♡\n                </h2>\n                <p className=\"font-inter text-lg md:text-xl text-[var(--warm-gray)] leading-relaxed max-w-2xl mx-auto mb-8\">\n                  Güzel dileğin başarıyla kaydedildi. Umarım en kısa sürede gerçek olur.\n                </p>\n                \n                <div className=\"p-6 bg-gradient-to-r from-[var(--purple-primary)]/10 to-[var(--purple-accent)]/10 rounded-2xl border border-[var(--purple-accent)]/20 max-w-2xl mx-auto\">\n                  <div className=\"text-xl heart-decoration mb-3\">♡</div>\n                  <p className=\"font-inter text-base text-[var(--purple-primary)] italic\">\n                    \"Dileğin: {wishText}\"\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"flex flex-col md:flex-row gap-4 justify-center\">\n              {wishSubmitted && (\n                <>\n                  <Button \n                    onClick={() => setLocation(\"/seventh-page\")}\n                    className=\"px-16 py-5 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white font-inter font-semibold text-lg rounded-full transition-all duration-500 transform hover:scale-105 shadow-lg hover:shadow-2xl\"\n                  >\n                    7. Sayfaya Git ♡\n                  </Button>\n                  \n                  <Button \n                    onClick={() => {\n                      setWishSubmitted(false);\n                      setWishText(\"\");\n                      setIsHidden(false);\n                    }}\n                    className=\"px-12 py-4 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                  >\n                    Yeni Dilek Tut ♡\n                  </Button>\n                </>\n              )}\n              \n              <Button \n                onClick={goBackToFourth}\n                className=\"px-12 py-4 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n              >\n                ← Dördüncü Sayfaya Dön\n              </Button>\n              \n              <Button \n                onClick={goBackToFirst}\n                className=\"px-12 py-4 bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n              >\n                ← Ana Sayfaya Dön\n              </Button>\n            </div>\n          </div>\n          \n          {/* Footer Note */}\n          <div className=\"text-center mt-8\">\n            <div className=\"text-xl heart-decoration mb-2 animate-float opacity-60\">♡</div>\n            <p className=\"font-inter text-sm text-white opacity-75\">\n              Beşinci sayfa - Dilek tutma sistemi\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9363},"client/src/pages/fourth-page.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport DecorativeHearts from \"@/components/decorative-hearts\";\n\nexport default function FourthPage() {\n  const [, setLocation] = useLocation();\n  const [envelopeOpen, setEnvelopeOpen] = useState(false);\n  const [selectedMessage, setSelectedMessage] = useState<number | null>(null);\n  const [showSelectedMessage, setShowSelectedMessage] = useState(false);\n\n  const messages = [\n    \"Seni çok seviyorum, benimle olmanı ve benim olmanı istiyorum.\",\n    \"Resimlerine her baktığımda ayrı bir güzelleşiyorsun çok farklı bir auran var.\",\n    \"Güzel gözlerine bakarak ellerini tutmak, öpmek istiyorum.\",\n    \"Yüzünü sevip okşamak, sana sarılıp koklamak, o güzel kokunu çekmek istiyorum Nisa'm.\",\n    \"Seni artık benim yapmam gerek güzel kızım, seni artık bana ait yapmam gerek.\"\n  ];\n\n  const goBackToThird = () => {\n    setLocation(\"/third-page\");\n  };\n\n  const goBackToFirst = () => {\n    setLocation(\"/\");\n  };\n\n  const openEnvelope = () => {\n    setEnvelopeOpen(true);\n  };\n\n  const selectMessage = (index: number) => {\n    setSelectedMessage(index);\n    setShowSelectedMessage(true);\n  };\n\n  const resetEnvelope = () => {\n    setEnvelopeOpen(false);\n    setSelectedMessage(null);\n    setShowSelectedMessage(false);\n  };\n\n  return (\n    <div className=\"min-h-screen gradient-bg font-inter\">\n      <DecorativeHearts />\n      \n      <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n        <div className=\"w-full max-w-5xl\">\n          <div className=\"glass-effect rounded-3xl shadow-2xl p-8 md:p-12 text-center animate-fade-in\">\n            \n            <h1 className=\"font-playfair text-4xl md:text-5xl font-bold text-[var(--elegant-gray)] mb-8\">\n              ♡\n            </h1>\n            \n            <div className=\"w-32 h-0.5 bg-gradient-to-r from-[var(--purple-primary)] via-[var(--purple-accent)] to-[var(--purple-primary)] mx-auto mb-10 rounded-full opacity-70\"></div>\n            \n            {!envelopeOpen ? (\n              <div className=\"mb-12\">\n                <h2 className=\"font-playfair text-2xl md:text-3xl font-bold text-[var(--purple-primary)] mb-6\">\n                  Sana Özel Mektup ♡\n                </h2>\n                <p className=\"font-inter text-lg text-[var(--warm-gray)] mb-12\">\n                  Kalp puluna tıklayarak mektubu aç ve içindeki mesajları keşfet\n                </p>\n                \n                {/* Sealed Envelope */}\n                <div className=\"relative inline-block mb-8\">\n                  <div className=\"w-80 h-52 bg-gradient-to-br from-white to-gray-50 rounded-lg shadow-lg border-2 border-gray-200 relative overflow-hidden\">\n                    {/* Envelope body */}\n                    <div className=\"absolute inset-0 bg-gradient-to-br from-purple-50 to-purple-100\"></div>\n                    \n                    {/* Envelope flap */}\n                    <div className=\"absolute top-0 left-0 w-full h-24 bg-gradient-to-br from-purple-200 to-purple-300 transform origin-top\"></div>\n                    \n                    {/* Heart stamp - clickable */}\n                    <div \n                      className=\"absolute top-4 right-4 w-16 h-16 bg-gradient-to-br from-[var(--purple-primary)] to-[var(--purple-accent)] rounded-full flex items-center justify-center cursor-pointer transform transition-all duration-300 hover:scale-110 hover:shadow-lg animate-pulse-soft\"\n                      onClick={openEnvelope}\n                    >\n                      <span className=\"text-2xl text-white\">♡</span>\n                    </div>\n                    \n                    {/* Decorative elements */}\n                    <div className=\"absolute bottom-6 left-6 text-[var(--purple-primary)] opacity-60\">\n                      <span className=\"font-playfair text-lg italic\">Sevgili Nisa'm...</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : !showSelectedMessage ? (\n              <div className=\"mb-12\">\n                <h2 className=\"font-playfair text-2xl md:text-3xl font-bold text-[var(--purple-primary)] mb-6\">\n                  Mesajları Keşfet ♡\n                </h2>\n                <p className=\"font-inter text-lg text-[var(--warm-gray)] mb-8\">\n                  Hangi mesajı okumak istiyorsun? Üzerine tıkla\n                </p>\n                \n                {/* Opened envelope with visible messages */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto\">\n                  {messages.map((message, index) => (\n                    <div\n                      key={index}\n                      className=\"relative group p-6 bg-gradient-to-br from-slate-800 via-purple-900 to-indigo-900 rounded-2xl shadow-2xl border-2 border-purple-500/40 cursor-pointer transform transition-all duration-500 hover:scale-105 hover:shadow-purple-500/25 animate-fade-in\"\n                      onClick={() => selectMessage(index)}\n                      style={{\n                        animationDelay: `${index * 0.2}s`,\n                        boxShadow: '0 10px 30px rgba(147, 51, 234, 0.3), inset 0 1px 2px rgba(255, 255, 255, 0.1)'\n                      }}\n                    >\n                      {/* Envelope design */}\n                      <div className=\"absolute top-2 right-2 text-yellow-400 text-sm opacity-60\">📮</div>\n                      <div className=\"absolute top-2 left-2 text-red-400 text-xs opacity-40\">💌 #{index + 1}</div>\n                      \n                      {/* Message preview - blurred until hover */}\n                      <div className=\"relative\">\n                        <p className=\"font-inter text-sm md:text-base text-purple-100 leading-relaxed group-hover:text-white transition-all duration-500 filter blur-md group-hover:blur-none\">\n                          {message}\n                        </p>\n                        \n                        {/* Blur overlay - disappears on hover */}\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-purple-900/80 via-purple-800/40 to-transparent pointer-events-none group-hover:opacity-0 transition-opacity duration-500\"></div>\n                      </div>\n                      \n                      {/* Interactive elements */}\n                      <div className=\"mt-4 flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"w-2 h-2 bg-purple-400 rounded-full animate-pulse\"></div>\n                          <span className=\"text-xs text-purple-300 font-medium\">Sevgi Mektubu</span>\n                        </div>\n                        \n                        <div className=\"flex items-center space-x-1 text-purple-300 group-hover:text-pink-300 transition-colors duration-300\">\n                          <span className=\"text-xs font-medium\">Oku</span>\n                          <div className=\"text-lg\">💖</div>\n                        </div>\n                      </div>\n                      \n                      {/* Hover glow effect */}\n                      <div className=\"absolute inset-0 bg-gradient-to-br from-pink-500/10 to-purple-500/10 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none\"></div>\n                      \n                      {/* Floating hearts on hover */}\n                      <div className=\"absolute -inset-2 pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity duration-500\">\n                        {Array.from({ length: 4 }, (_, i) => (\n                          <div\n                            key={i}\n                            className=\"absolute w-2 h-2 text-pink-300 animate-bounce\"\n                            style={{\n                              left: `${20 + i * 60}%`,\n                              top: `${10 + (i % 2) * 80}%`,\n                              animationDelay: `${i * 0.2}s`,\n                            }}\n                          >\n                            💕\n                          </div>\n                        ))}\n                      </div>\n                      \n                      {/* Corner decoration */}\n                      <div className=\"absolute bottom-2 right-2 text-purple-400/60 text-xs\">✨</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"mb-12\">\n                <h2 className=\"font-playfair text-3xl md:text-4xl font-bold text-[var(--purple-primary)] mb-8\">\n                  Seçtiğin Mesaj ♡\n                </h2>\n                \n                {/* Selected message - enlarged and clear */}\n                <div className=\"max-w-3xl mx-auto p-8 bg-gradient-to-br from-white to-purple-50 rounded-3xl shadow-2xl border-2 border-[var(--purple-accent)]/30 animate-fade-in transform scale-105\">\n                  <div className=\"text-4xl heart-decoration mb-6 animate-pulse-soft\">♡</div>\n                  <p className=\"font-inter text-lg md:text-xl text-[var(--warm-gray)] leading-relaxed font-medium\">\n                    {selectedMessage !== null ? messages[selectedMessage] : \"\"}\n                  </p>\n                  <div className=\"mt-6 flex justify-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-[var(--purple-accent)] rounded-full animate-pulse\"></div>\n                    <div className=\"w-2 h-2 bg-[var(--purple-primary)] rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }}></div>\n                    <div className=\"w-2 h-2 bg-[var(--purple-accent)] rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }}></div>\n                  </div>\n                </div>\n                \n                <div className=\"mt-8 space-y-4\">\n                  <Button \n                    onClick={() => setLocation(\"/fifth-page\")}\n                    className=\"px-16 py-5 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white font-inter font-semibold text-lg rounded-full transition-all duration-500 transform hover:scale-105 shadow-lg hover:shadow-2xl\"\n                  >\n                    5. Sayfaya Git ♡\n                  </Button>\n                  \n                  <Button \n                    onClick={resetEnvelope}\n                    className=\"px-12 py-4 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                  >\n                    Başka Mesaj Oku\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"flex flex-col md:flex-row gap-4 justify-center\">\n              <Button \n                onClick={goBackToThird}\n                className=\"px-12 py-4 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n              >\n                ← Üçüncü Sayfaya Dön\n              </Button>\n              \n              <Button \n                onClick={goBackToFirst}\n                className=\"px-12 py-4 bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n              >\n                ← Ana Sayfaya Dön\n              </Button>\n            </div>\n          </div>\n          \n          {/* Footer Note */}\n          <div className=\"text-center mt-8\">\n            <div className=\"text-xl heart-decoration mb-2 animate-float opacity-60\">♡</div>\n            <p className=\"font-inter text-sm text-white opacity-75\">\n              Dördüncü sayfa - Mektup okuma oyunu\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":12186},"client/src/pages/landing.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport DecorativeHearts from \"@/components/decorative-hearts\";\n\nexport default function Landing() {\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [, setLocation] = useLocation();\n\n  const handleConfirmation = () => {\n    setIsConfirmed(true);\n  };\n\n  const handleNextPage = () => {\n    if (isConfirmed) {\n      setLocation(\"/second-page\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen gradient-bg font-inter\">\n      <DecorativeHearts />\n      \n      {/* Main Content Container */}\n      <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n        <div className=\"w-full max-w-2xl\">\n          \n          {/* Greeting Card */}\n          <div className=\"glass-effect rounded-3xl shadow-2xl p-8 md:p-12 text-center animate-fade-in\">\n            \n            {/* Greeting Message */}\n            <div className=\"mb-16\">\n              <h1 className=\"font-playfair text-4xl md:text-5xl lg:text-6xl font-bold text-[var(--elegant-gray)] mb-8 leading-tight tracking-wide\">\n                Merhaba <span className=\"text-[var(--purple-primary)] relative\">\n                  tatlı kızım\n                  <div className=\"absolute -bottom-2 left-0 right-0 h-0.5 bg-gradient-to-r from-transparent via-[var(--purple-accent)] to-transparent opacity-60\"></div>\n                </span>\n              </h1>\n              \n              {/* Large sparkling purple heart */}\n              <div className=\"text-7xl md:text-8xl heart-decoration mb-10 animate-pulse-soft relative inline-block\">\n                <div className=\"shimmer-heart absolute inset-0\">♡</div>\n                <div className=\"relative z-10\">♡</div>\n              </div>\n              \n              <div className=\"w-32 h-0.5 bg-gradient-to-r from-[var(--purple-primary)] via-[var(--purple-accent)] to-[var(--purple-primary)] mx-auto mb-10 rounded-full opacity-70\"></div>\n              \n              <p className=\"font-inter text-lg md:text-xl text-[var(--warm-gray)] leading-relaxed max-w-2xl mx-auto font-normal\">\n                Bu ve geri kalan sayfalar Berat'ın tarafından senin için özenle tasarlandı. \n                <br className=\"hidden md:block\" />\n                <span className=\"text-[var(--purple-primary)] font-semibold text-xl\"> Beni ne kadar çok sevdiğini söylemeden</span> \n                {' '}bir sonraki sayfaya geçemezsin.\n              </p>\n            </div>\n\n            {/* Interaction Buttons */}\n            <div className=\"space-y-5\">\n              \n              {/* Söyledim Button */}\n              <Button \n                onClick={handleConfirmation}\n                disabled={isConfirmed}\n                className={`relative overflow-hidden px-16 py-5 font-inter font-semibold text-lg rounded-full transition-all duration-500 transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-[var(--purple-light)] focus:ring-opacity-40 ${\n                  isConfirmed \n                    ? 'bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white shadow-lg hover:shadow-emerald-500/25' \n                    : 'bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white shadow-lg hover:shadow-purple-500/25'\n                } hover:shadow-2xl`}\n              >\n                <span className=\"relative z-10\">\n                  {isConfirmed ? 'Ben de seni çok seviyorum ❤️' : 'Söyledim'} \n                </span>\n                <div className=\"absolute inset-0 bg-white opacity-0 hover:opacity-10 transition-opacity duration-300\"></div>\n              </Button>\n\n              {/* Diğer Sayfaya Geç Button */}\n              <Button \n                onClick={handleNextPage}\n                disabled={!isConfirmed}\n                className={`relative overflow-hidden px-16 py-5 font-inter font-semibold text-lg rounded-full transition-all duration-500 transform ${\n                  isConfirmed \n                    ? 'bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white cursor-pointer hover:scale-105 shadow-lg hover:shadow-slate-500/25 hover:shadow-2xl' \n                    : 'bg-gradient-to-r from-gray-300 to-gray-400 text-gray-600 cursor-not-allowed opacity-60'\n                }`}\n              >\n                <span className=\"relative z-10\">\n                  Bir sonraki sayfa →\n                </span>\n                {isConfirmed && (\n                  <div className=\"absolute inset-0 bg-white opacity-0 hover:opacity-10 transition-opacity duration-300\"></div>\n                )}\n              </Button>\n            </div>\n\n            {/* Status Indicator */}\n            <div className=\"mt-10\">\n              <div className={`transition-all duration-700 transform ${\n                isConfirmed \n                  ? 'opacity-100 translate-y-0 scale-100' \n                  : 'opacity-0 translate-y-4 scale-95'\n              }`}>\n                {isConfirmed && (\n                  <div className=\"inline-flex items-center space-x-2 px-6 py-3 bg-gradient-to-r from-[var(--purple-primary)]/10 to-[var(--purple-accent)]/10 rounded-full border border-[var(--purple-accent)]/20\">\n                    <div className=\"text-xl heart-decoration animate-pulse-soft\">♡</div>\n                    <p className=\"font-inter text-base font-medium text-[var(--purple-primary)]\">\n                      Artık bir sonraki sayfaya geçebilirsin yavruşum.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n          </div>\n\n          {/* Footer Note with decorative heart */}\n          <div className=\"text-center mt-8\">\n            <div className=\"text-2xl heart-decoration mb-3 animate-float opacity-60\">\n              ♡\n            </div>\n            <p className=\"font-inter text-sm text-white opacity-75\">\n              Berat'ın senin için tasarladı güzelim.\n            </p>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6197},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/second-page.tsx":{"content":"import { useState, useRef } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport DecorativeHearts from \"@/components/decorative-hearts\";\n\nexport default function SecondPage() {\n  const [, setLocation] = useLocation();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [heartPlaced, setHeartPlaced] = useState(false);\n  const [heartPosition, setHeartPosition] = useState({ x: 100, y: 100 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const heartRef = useRef<HTMLDivElement>(null);\n  const dropZoneRef = useRef<HTMLDivElement>(null);\n\n  const goBackToFirst = () => {\n    setLocation(\"/\");\n  };\n\n  const startGame = () => {\n    setGameStarted(true);\n    setHeartPlaced(false);\n    setShowErrorMessage(false);\n    setShowSuccessMessage(false);\n    setHeartPosition({ x: 100, y: 100 });\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (heartPlaced) return;\n    setIsDragging(true);\n    setShowErrorMessage(false);\n    \n    // Kalbin merkezini bul\n    const rect = e.currentTarget.getBoundingClientRect();\n    const heartCenterX = rect.width / 2;\n    const heartCenterY = rect.height / 2;\n\n    const handleMouseMove = (moveEvent: MouseEvent) => {\n      // 60fps için requestAnimationFrame kullan\n      requestAnimationFrame(() => {\n        setHeartPosition({\n          x: moveEvent.clientX - heartCenterX - 250,\n          y: moveEvent.clientY - heartCenterY - 200\n        });\n      });\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(false);\n      \n      // Daha geniş drop zone toleransı\n      if (dropZoneRef.current && heartRef.current) {\n        const dropZoneRect = dropZoneRef.current.getBoundingClientRect();\n        const heartRect = heartRef.current.getBoundingClientRect();\n        \n        // Çok daha geniş tolerans - 100px\n        const isInDropZone = (\n          heartRect.left >= dropZoneRect.left - 100 &&\n          heartRect.right <= dropZoneRect.right + 100 &&\n          heartRect.top >= dropZoneRect.top - 100 &&\n          heartRect.bottom <= dropZoneRect.bottom + 100\n        );\n\n        if (isInDropZone) {\n          setHeartPlaced(true);\n          setShowSuccessMessage(true);\n          // Otomatik olarak merkeze yerleştir\n          setHeartPosition({\n            x: dropZoneRect.left + dropZoneRect.width / 2 - 40 - 250,\n            y: dropZoneRect.top + dropZoneRect.height / 2 - 40 - 200\n          });\n          // Başarı mesajını 4 saniye sonra gizle\n          setTimeout(() => setShowSuccessMessage(false), 4000);\n        } else {\n          // Daha nazik hata mesajları\n          const errorMessages = [\n            \"Biraz daha yaklaştır sevgilim...\",\n            \"Neredeyse tamam, bir deneme daha...\",\n            \"Çok yaklaştın, devam et...\"\n          ];\n          setErrorMessage(errorMessages[Math.floor(Math.random() * errorMessages.length)]);\n          setShowErrorMessage(true);\n          setTimeout(() => setShowErrorMessage(false), 2500);\n        }\n      }\n\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  if (!gameStarted) {\n    return (\n      <div className=\"min-h-screen gradient-bg font-inter\">\n        <DecorativeHearts />\n        \n        <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n          <div className=\"w-full max-w-3xl\">\n            <div className=\"glass-effect rounded-3xl shadow-2xl p-8 md:p-12 text-center animate-fade-in\">\n              <h1 className=\"font-playfair text-4xl md:text-5xl font-bold text-[var(--elegant-gray)] mb-8\">\n                ♡\n              </h1>\n              \n              <div className=\"w-32 h-0.5 bg-gradient-to-r from-[var(--purple-primary)] via-[var(--purple-accent)] to-[var(--purple-primary)] mx-auto mb-10 rounded-full opacity-70\"></div>\n              \n              <div className=\"mb-10\">\n                <p className=\"font-inter text-lg md:text-xl text-[var(--warm-gray)] leading-relaxed max-w-2xl mx-auto mb-8\">\n                  Oyunu başlattıktan sonra gördüğün kalp benim.\n                </p>\n                \n                <p className=\"font-inter text-lg md:text-xl text-[var(--purple-primary)] font-semibold leading-relaxed max-w-2xl mx-auto\">\n                  Kalbimi bana getirdin,şimdi kalbimi güzel ellerini kullanarak yerine koy ve devam et.\n                </p>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <Button \n                  onClick={startGame}\n                  className=\"relative overflow-hidden px-16 py-5 font-inter font-semibold text-lg rounded-full transition-all duration-500 transform hover:scale-105 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white shadow-lg hover:shadow-purple-500/25 hover:shadow-2xl\"\n                >\n                  <span className=\"relative z-10\">Oyunu Başlat ♡</span>\n                  <div className=\"absolute inset-0 bg-white opacity-0 hover:opacity-10 transition-opacity duration-300\"></div>\n                </Button>\n                \n                <Button \n                  onClick={goBackToFirst}\n                  className=\"px-12 py-4 bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                >\n                  ← Geri Dön\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-[var(--purple-primary)] via-indigo-800 to-purple-900 font-inter overflow-hidden relative\">\n      \n      {/* Modern floating orbs background */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        {Array.from({ length: 12 }, (_, i) => (\n          <div\n            key={i}\n            className=\"absolute rounded-full bg-white/5 backdrop-blur-sm animate-float\"\n            style={{\n              width: `${80 + Math.random() * 100}px`,\n              height: `${80 + Math.random() * 100}px`,\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n              animationDelay: `${Math.random() * 8}s`,\n              animationDuration: `${6 + Math.random() * 4}s`,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Geometric patterns */}\n      <div className=\"absolute top-0 right-0 w-96 h-96 bg-gradient-to-br from-pink-400/10 to-purple-400/10 rounded-full blur-3xl\"></div>\n      <div className=\"absolute bottom-0 left-0 w-80 h-80 bg-gradient-to-tr from-blue-400/10 to-indigo-400/10 rounded-full blur-3xl\"></div>\n      \n      <DecorativeHearts />\n      \n      <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n        <div className=\"w-full max-w-5xl\">\n          <div className=\"backdrop-blur-xl bg-gradient-to-br from-white/15 via-white/10 to-white/5 border border-white/30 rounded-[2.5rem] p-10 md:p-12 shadow-[0_32px_64px_-12px_rgba(0,0,0,0.25)] animate-fade-in relative overflow-hidden\">\n            \n            {/* Animated border glow */}\n            <div className=\"absolute inset-0 rounded-[2.5rem] bg-gradient-to-r from-pink-400/20 via-purple-400/20 to-blue-400/20 animate-pulse\"></div>\n            \n            {!heartPlaced ? (\n              <div className=\"text-center mb-8\">\n                <h2 className=\"font-playfair text-3xl md:text-4xl font-bold text-[var(--elegant-gray)] mb-6\">\n                  Kalbimi Yerine Koy\n                </h2>\n                <p className=\"font-inter text-lg text-[var(--warm-gray)] mb-8\">\n                  Kalbi sürükleyerek aşağıdaki kutucuğa yerleştir\n                </p>\n              </div>\n            ) : (\n              <div className=\"text-center mb-8\">\n                <h2 className=\"font-playfair text-3xl md:text-4xl font-bold text-[var(--purple-primary)] mb-6\">\n                  Mükemmel! ♡\n                </h2>\n                <p className=\"font-inter text-lg md:text-xl text-[var(--warm-gray)] leading-relaxed max-w-3xl mx-auto\">\n                  Sayende onun ritmini artırıyorsun, onun çalışma hızını etkiliyorsun. \n                  Adrenalin veya asetilkolin... çok daha farklı bir şeysin.\n                </p>\n              </div>\n            )}\n\n            {/* Modern Interactive Game Area */}\n            <div className=\"relative w-full max-w-3xl mx-auto h-96 mb-8\">\n              \n              {/* Elegant Game Container */}\n              <div className=\"relative h-full bg-gradient-to-br from-slate-900 via-purple-900 to-indigo-900 rounded-3xl shadow-2xl border border-purple-500/30 overflow-hidden\">\n                \n                {/* Animated Background */}\n                <div className=\"absolute inset-0\">\n                  {/* Floating particles */}\n                  {Array.from({ length: 20 }, (_, i) => (\n                    <div\n                      key={i}\n                      className=\"absolute w-1 h-1 bg-purple-300 rounded-full animate-pulse opacity-40\"\n                      style={{\n                        left: `${Math.random() * 100}%`,\n                        top: `${Math.random() * 100}%`,\n                        animationDelay: `${Math.random() * 3}s`,\n                        animationDuration: `${2 + Math.random() * 2}s`,\n                      }}\n                    />\n                  ))}\n                  \n                  {/* Gradient overlay */}\n                  <div className=\"absolute inset-0 bg-gradient-to-br from-purple-600/10 via-transparent to-pink-600/10\"></div>\n                </div>\n                \n                {/* Interactive Drop Zone */}\n                <div \n                  ref={dropZoneRef}\n                  className={`absolute bottom-12 left-1/2 transform -translate-x-1/2 w-40 h-40 transition-all duration-500 ${\n                    isDragging \n                      ? 'border-4 border-pink-400 bg-pink-400/20 scale-110' \n                      : 'border-3 border-purple-400/60 bg-purple-400/10'\n                  } border-dashed rounded-full flex flex-col items-center justify-center backdrop-blur-sm`}\n                  style={{\n                    boxShadow: isDragging \n                      ? '0 0 40px rgba(236, 72, 153, 0.6), inset 0 0 20px rgba(236, 72, 153, 0.2)' \n                      : '0 0 25px rgba(147, 51, 234, 0.4), inset 0 0 15px rgba(147, 51, 234, 0.1)',\n                  }}\n                >\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl mb-2 animate-bounce\">💜</div>\n                    <span className={`font-inter text-sm font-semibold transition-colors duration-300 ${\n                      isDragging ? 'text-pink-200' : 'text-purple-200'\n                    }`}>\n                      Kalbimi Buraya Koy\n                    </span>\n                  </div>\n                  \n                  {/* Pulsing rings */}\n                  <div className=\"absolute inset-0 border-2 border-purple-300/40 rounded-full animate-ping\"></div>\n                  <div className=\"absolute -inset-4 border-2 border-purple-300/20 rounded-full animate-ping\" style={{ animationDelay: '0.5s' }}></div>\n                </div>\n\n                {/* Optimized Draggable Heart - 60fps Performance */}\n                {!heartPlaced && (\n                  <div\n                    ref={heartRef}\n                    className={`absolute transform ${\n                      isDragging \n                        ? 'cursor-grabbing scale-125 z-50 rotate-12' \n                        : 'cursor-grab hover:scale-110 hover:-rotate-3 transition-transform duration-200'\n                    }`}\n                    style={{\n                      left: `${heartPosition.x}px`,\n                      top: `${heartPosition.y}px`,\n                      userSelect: 'none',\n                      willChange: 'transform',\n                      filter: isDragging \n                        ? 'drop-shadow(0 0 20px rgba(236, 72, 153, 0.8))' \n                        : 'drop-shadow(0 0 10px rgba(147, 51, 234, 0.6))',\n                    }}\n                    onMouseDown={handleMouseDown}\n                    draggable={false}\n                  >\n                    <div className=\"relative\">\n                      {/* Heart with modern styling */}\n                      <div \n                        className=\"text-7xl font-bold bg-gradient-to-br from-pink-400 via-purple-500 to-indigo-600 bg-clip-text text-transparent\"\n                        style={{\n                          textShadow: isDragging \n                            ? '0 0 30px rgba(236, 72, 153, 0.8)' \n                            : '0 0 15px rgba(147, 51, 234, 0.6)',\n                        }}\n                      >\n                        ♡\n                      </div>\n                      \n                      {/* Optimized sparkles - Reduced for better performance */}\n                      {!isDragging && Array.from({ length: 4 }, (_, i) => (\n                        <div\n                          key={i}\n                          className=\"absolute w-1.5 h-1.5 bg-yellow-300 rounded-full animate-ping opacity-60\"\n                          style={{\n                            left: `${30 + Math.sin(i) * 35}px`,\n                            top: `${30 + Math.cos(i) * 35}px`,\n                            animationDelay: `${i * 0.4}s`,\n                            willChange: 'opacity, transform',\n                          }}\n                        />\n                      ))}\n                      \n                      {/* Optimized magic trail effect */}\n                      {isDragging && (\n                        <div \n                          className=\"absolute inset-0 bg-gradient-to-r from-pink-400 to-purple-500 rounded-full opacity-30 animate-pulse\"\n                          style={{ willChange: 'opacity' }}\n                        ></div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Successfully Placed Heart */}\n                {heartPlaced && (\n                  <div\n                    className=\"absolute z-30\"\n                    style={{\n                      left: `${heartPosition.x}px`,\n                      top: `${heartPosition.y}px`\n                    }}\n                  >\n                    <div className=\"relative\">\n                      {/* Victory heart with celebration */}\n                      <div \n                        className=\"text-7xl font-bold bg-gradient-to-br from-pink-400 via-red-500 to-purple-600 bg-clip-text text-transparent animate-pulse\"\n                        style={{\n                          textShadow: '0 0 40px rgba(236, 72, 153, 1)',\n                        }}\n                      >\n                        ♥\n                      </div>\n                      \n                      {/* Optimized celebration sparkles */}\n                      {Array.from({ length: 8 }, (_, i) => (\n                        <div\n                          key={i}\n                          className=\"absolute w-2.5 h-2.5 bg-yellow-400 rounded-full animate-bounce opacity-80\"\n                          style={{\n                            left: `${20 + Math.sin(i * 0.7) * 45}px`,\n                            top: `${20 + Math.cos(i * 0.5) * 45}px`,\n                            animationDelay: `${i * 0.15}s`,\n                            willChange: 'transform',\n                          }}\n                        />\n                      ))}\n                      \n                      {/* Success glow */}\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-pink-400 to-red-500 rounded-full opacity-40 animate-pulse scale-150\"></div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Magical floating elements */}\n                <div className=\"absolute inset-0 pointer-events-none\">\n                  {Array.from({ length: 8 }, (_, i) => (\n                    <div\n                      key={i}\n                      className=\"absolute w-2 h-2 bg-pink-300 rounded-full animate-ping opacity-40\"\n                      style={{\n                        left: `${10 + i * 12}%`,\n                        top: `${20 + Math.sin(i) * 60}%`,\n                        animationDelay: `${i * 0.8}s`,\n                        animationDuration: `${3 + Math.random() * 2}s`,\n                      }}\n                    />\n                  ))}\n                </div>\n                \n                {/* Ethereal glow rings */}\n                <div className=\"absolute top-1/4 left-1/4 w-32 h-32 border border-purple-300/20 rounded-full animate-spin\" style={{ animationDuration: '20s' }}></div>\n                <div className=\"absolute bottom-1/4 right-1/4 w-24 h-24 border border-pink-300/20 rounded-full animate-spin\" style={{ animationDuration: '15s', animationDirection: 'reverse' }}></div>\n              </div>\n            </div>\n\n            {/* Enhanced Error Message - Daha Görünür */}\n            {showErrorMessage && (\n              <div className=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 mb-6 p-8 bg-gradient-to-r from-orange-400/90 to-red-500/90 border-4 border-orange-300 rounded-3xl animate-fade-in backdrop-blur-lg shadow-2xl\">\n                <div className=\"flex items-center justify-center space-x-4\">\n                  <div className=\"text-4xl animate-bounce\">💭</div>\n                  <p className=\"font-inter text-white font-bold text-center text-xl drop-shadow-lg\">\n                    {errorMessage}\n                  </p>\n                </div>\n                \n                {/* Glow effect */}\n                <div className=\"absolute inset-0 bg-gradient-to-r from-orange-400 to-red-500 rounded-3xl opacity-20 animate-pulse\"></div>\n                \n                {/* Close button */}\n                <button \n                  onClick={() => setShowErrorMessage(false)}\n                  className=\"absolute top-2 right-2 w-8 h-8 bg-white/20 hover:bg-white/30 rounded-full flex items-center justify-center text-white font-bold transition-all duration-200\"\n                >\n                  ×\n                </button>\n              </div>\n            )}\n\n            {/* Success Message - Romantic Text */}\n            {showSuccessMessage && (\n              <div className=\"fixed top-1/4 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 p-8 bg-gradient-to-r from-pink-500/95 to-purple-600/95 border-4 border-pink-300 rounded-3xl animate-fade-in backdrop-blur-lg shadow-2xl max-w-lg\">\n                <div className=\"text-center space-y-4\">\n                  <div className=\"text-5xl animate-bounce\">💖</div>\n                  <h3 className=\"font-playfair text-2xl font-bold text-white mb-4\">\n                    Mükemmel! ♡\n                  </h3>\n                  <p className=\"font-inter text-white text-lg leading-relaxed drop-shadow-lg\">\n                    Sayende onun ritmini artırıyorsun, onun çalışma hızını etkiliyorsun. \n                    Adrenalin veya asetilkolin... çok daha farklı bir şeysin.\n                  </p>\n                  \n                  {/* Heart pulse effect */}\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-pink-400 to-purple-500 rounded-3xl opacity-20 animate-pulse\"></div>\n                  \n                  {/* Floating hearts around message */}\n                  {Array.from({ length: 6 }, (_, i) => (\n                    <div\n                      key={i}\n                      className=\"absolute text-pink-200 text-lg animate-bounce opacity-70\"\n                      style={{\n                        left: `${-20 + Math.sin(i * 1.2) * 120}px`,\n                        top: `${-10 + Math.cos(i * 0.8) * 80}px`,\n                        animationDelay: `${i * 0.3}s`,\n                      }}\n                    >\n                      💕\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"text-center space-y-4\">\n              {heartPlaced ? (\n                <div className=\"space-y-4\">\n                  <Button \n                    onClick={() => setLocation(\"/third-page\")}\n                    className=\"px-16 py-5 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white font-inter font-semibold text-lg rounded-full transition-all duration-500 transform hover:scale-105 shadow-lg hover:shadow-2xl\"\n                  >\n                    Diğer Sayfaya Geç ♡\n                  </Button>\n                  <Button \n                    onClick={goBackToFirst}\n                    className=\"px-12 py-4 bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                  >\n                    ← Geri Dön\n                  </Button>\n                </div>\n              ) : (\n                <Button \n                  onClick={() => setGameStarted(false)}\n                  className=\"px-12 py-4 bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                >\n                  ← Geri Dön\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":22151},"client/src/pages/seventh-page.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function SeventhPage() {\n  const [, setLocation] = useLocation();\n  const [showInitialQuestion, setShowInitialQuestion] = useState(true);\n  const [showSadMessage, setShowSadMessage] = useState(false);\n  const [startCinematic, setStartCinematic] = useState(false);\n  const [fadeIn, setFadeIn] = useState(false);\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n  const [showFinalQuestion, setShowFinalQuestion] = useState(false);\n  const [noButtonPosition, setNoButtonPosition] = useState({ x: 0, y: 0 });\n  const [noButtonVisible, setNoButtonVisible] = useState(true);\n  const [showExplosion, setShowExplosion] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showFinalStory, setShowFinalStory] = useState(false);\n  const [storyFadeIn, setStoryFadeIn] = useState(false);\n  const [currentStoryIndex, setCurrentStoryIndex] = useState(0);\n  const noButtonRef = useRef<HTMLButtonElement>(null);\n\n  // Film sahnesi metinleri\n  const cinematicTexts = [\n    \"Güzel kızım,\",\n    \"seni çok seviyorum.\",\n    \"Artık söylemenin vakti geldi,\",\n    \"evet sen de beni uzun zamandır bekliyorsun farkındayım,\",\n    \"fakat ben de istemezdim.\",\n    \"Seni daha fazla bekletmemin bir lüzmu yok.\",\n    \"Artık bir isim koymanın vakti geldi,\",\n    \"o güzel gözlerine,\",\n    \"yüzüne bakmaya doyamayışımı\",\n    \"artık bir isim koyarak\",\n    \"söylemenin vakti geldi.\"\n  ];\n\n  // Final hikaye metinleri\n  const finalStoryTexts = [\n    \"Nisa evet dedi,\",\n    \"Berat güzel kızına kavuştu.\",\n    \"Bir isim konuldu,\",\n    \"nisa beratın olundu.\",\n    \"Bu mutlu son burda biter mi,\",\n    \"her şeyim benim olur geçer mi,\",\n    \"tatlı nisam beni bi öpse,\",\n    \"dudaklarıma şeker bi sürse,\",\n    \"ah ne güzel olurdu,\",\n    \"nisam bebeğim olurdu.\",\n    \"baktık bir isim yok,\",\n    \"buldum bi isim güzel çok.\",\n    \"Nisa çok güzeldi,\",\n    \"benim oldu çok hoşuma giderdi.\"\n  ];\n\n  const handleNoClick = () => {\n    setShowInitialQuestion(false);\n    setShowSadMessage(true);\n    setTimeout(() => {\n      setLocation(\"/\");\n    }, 3000);\n  };\n\n  const handleYesClick = () => {\n    setShowInitialQuestion(false);\n    setStartCinematic(true);\n    setTimeout(() => setFadeIn(true), 1000);\n  };\n\n  // Sinematik metin animasyonu\n  useEffect(() => {\n    if (startCinematic && fadeIn) {\n      const timer = setInterval(() => {\n        setCurrentTextIndex(prev => {\n          if (prev < cinematicTexts.length - 1) {\n            return prev + 1;\n          } else {\n            clearInterval(timer);\n            setTimeout(() => {\n              setShowFinalQuestion(true);\n            }, 3000);\n            return prev;\n          }\n        });\n      }, 3000);\n\n      return () => clearInterval(timer);\n    }\n  }, [startCinematic, fadeIn, cinematicTexts.length]);\n\n  // Hayır butonunun kaçması\n  const handleNoButtonHover = () => {\n    if (!noButtonRef.current) return;\n    \n    const button = noButtonRef.current;\n    const rect = button.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    \n    // Rastgele yeni pozisyon\n    const newX = Math.random() * (windowWidth - rect.width - 50);\n    const newY = Math.random() * (windowHeight - rect.height - 50);\n    \n    setNoButtonPosition({ x: newX, y: newY });\n    \n    // Eğer buton ekran dışına kaçarsa patlat\n    if (newX < -50 || newY < -50 || newX > windowWidth - 50 || newY > windowHeight - 50) {\n      setShowExplosion(true);\n      setNoButtonVisible(false);\n      setTimeout(() => setShowExplosion(false), 1000);\n    }\n  };\n\n  const handleFinalYes = () => {\n    setShowConfetti(true);\n    // 3 saniye sonra final hikayeyi başlat\n    setTimeout(() => {\n      setShowFinalStory(true);\n      setTimeout(() => setStoryFadeIn(true), 1000);\n    }, 3000);\n  };\n\n  // Final hikaye animasyonu\n  useEffect(() => {\n    if (showFinalStory && storyFadeIn) {\n      const timer = setInterval(() => {\n        setCurrentStoryIndex(prev => {\n          if (prev < finalStoryTexts.length - 1) {\n            return prev + 1;\n          } else {\n            clearInterval(timer);\n            setTimeout(() => {\n              setLocation(\"/\");\n            }, 5000);\n            return prev;\n          }\n        });\n      }, 2500);\n\n      return () => clearInterval(timer);\n    }\n  }, [showFinalStory, storyFadeIn, finalStoryTexts.length, setLocation]);\n\n  // Konfetti efekti\n  const generateConfetti = () => {\n    const confettiItems = ['🎉', '♡', '💖', '✨', '🌟', '💕', '🎊', '❤️'];\n    return Array.from({ length: 100 }, (_, i) => (\n      <div\n        key={i}\n        className=\"absolute pointer-events-none\"\n        style={{\n          left: `${Math.random() * 100}%`,\n          top: `${Math.random() * 100}%`,\n          fontSize: `${16 + Math.random() * 24}px`,\n          animation: `confettiFall ${3 + Math.random() * 4}s ease-out ${Math.random() * 2}s infinite, confettiSpin ${2 + Math.random() * 3}s linear infinite`,\n        }}\n      >\n        {confettiItems[Math.floor(Math.random() * confettiItems.length)]}\n      </div>\n    ));\n  };\n\n  // Floating hearts efekti\n  const generateFloatingHearts = () => {\n    return Array.from({ length: 30 }, (_, i) => (\n      <div\n        key={`heart-${i}`}\n        className=\"absolute pointer-events-none text-pink-300\"\n        style={{\n          left: `${Math.random() * 100}%`,\n          top: `${Math.random() * 100}%`,\n          fontSize: `${20 + Math.random() * 30}px`,\n          animation: `heartFloat ${4 + Math.random() * 3}s ease-in-out ${Math.random() * 3}s infinite, heartPulse ${1 + Math.random()}s ease-in-out infinite`,\n          opacity: 0.7 + Math.random() * 0.3,\n        }}\n      >\n        💖\n      </div>\n    ));\n  };\n\n  if (showSadMessage) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center animate-fade-in\">\n          <div className=\"text-6xl mb-6\">😢</div>\n          <h1 className=\"text-3xl font-bold text-white mb-4\">:(</h1>\n          <p className=\"text-xl text-gray-300\">Sayfa kapanıyor...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Final hikaye sahnesi\n  if (showFinalStory) {\n    return (\n      <div className={`min-h-screen bg-black flex items-center justify-center transition-all duration-2000 ${storyFadeIn ? 'bg-gradient-to-br from-indigo-900/30 via-black to-purple-900/30' : ''}`}>\n        {/* Romantik yıldızlar arka plan */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          {Array.from({ length: 30 }, (_, i) => (\n            <div\n              key={i}\n              className=\"absolute w-1 h-1 bg-yellow-200 rounded-full animate-pulse opacity-40\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n                animationDelay: `${Math.random() * 4}s`,\n                animationDuration: `${3 + Math.random() * 2}s`,\n              }}\n            />\n          ))}\n        </div>\n        \n        <div className=\"text-center max-w-6xl px-8 relative z-10\">\n          <div className=\"space-y-16\">\n            {finalStoryTexts.slice(0, currentStoryIndex + 1).map((text, index) => (\n              <div\n                key={index}\n                className=\"relative\"\n                style={{\n                  animation: `finalStoryGlow 1.5s ease-out ${index * 0.4}s forwards`,\n                  opacity: 0,\n                }}\n              >\n                <p\n                  className={`font-playfair text-white leading-relaxed transition-all duration-1000 ${\n                    index === currentStoryIndex \n                      ? 'text-3xl md:text-4xl lg:text-5xl opacity-100' \n                      : 'text-2xl md:text-3xl opacity-75'\n                  }`}\n                  style={{\n                    textShadow: index === currentStoryIndex \n                      ? '0 0 25px rgba(255, 255, 255, 0.9), 0 0 50px rgba(138, 43, 226, 0.7), 0 0 75px rgba(255, 20, 147, 0.5)' \n                      : '0 0 15px rgba(255, 255, 255, 0.4)',\n                    letterSpacing: '0.08em',\n                    lineHeight: '1.6',\n                  }}\n                >\n                  {text}\n                </p>\n                \n                {/* Romantik kalp efekti aktif metin için */}\n                {index === currentStoryIndex && (\n                  <div className=\"absolute -inset-6 pointer-events-none\">\n                    {Array.from({ length: 8 }, (_, heartIndex) => (\n                      <div\n                        key={heartIndex}\n                        className=\"absolute text-pink-300 animate-ping opacity-60\"\n                        style={{\n                          left: `${Math.random() * 100}%`,\n                          top: `${Math.random() * 100}%`,\n                          animationDelay: `${heartIndex * 0.3}s`,\n                          fontSize: '16px',\n                        }}\n                      >\n                        💕\n                      </div>\n                    ))}\n                  </div>\n                )}\n                \n                {/* Typing cursor efekti */}\n                {index === currentStoryIndex && (\n                  <span className=\"inline-block w-0.5 h-10 bg-pink-300 ml-3 animate-pulse\" />\n                )}\n              </div>\n            ))}\n          </div>\n          \n          {/* Final mesaj tamamlandığında gösterilecek */}\n          {currentStoryIndex >= finalStoryTexts.length - 1 && (\n            <div \n              className=\"mt-16\"\n              style={{\n                animation: 'finalEndGlow 2s ease-out 2s forwards',\n                opacity: 0,\n              }}\n            >\n              <div className=\"text-6xl mb-6\">💖👑💖</div>\n              <p \n                className=\"text-2xl md:text-3xl font-playfair text-pink-200\"\n                style={{\n                  textShadow: '0 0 30px rgba(255, 182, 193, 0.8)',\n                }}\n              >\n                ~ SON ~\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  if (startCinematic) {\n    return (\n      <div className={`min-h-screen bg-black flex items-center justify-center transition-all duration-2000 ${fadeIn ? 'bg-gradient-to-br from-purple-900/30 via-black to-pink-900/30' : ''}`}>\n        {showConfetti && (\n          <div className=\"fixed inset-0 pointer-events-none z-50\">\n            {/* Main confetti layer */}\n            <div className=\"absolute inset-0\">\n              {generateConfetti()}\n            </div>\n            \n            {/* Floating hearts layer */}\n            <div className=\"absolute inset-0\">\n              {generateFloatingHearts()}\n            </div>\n            \n            {/* Explosion burst effect */}\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <div className=\"relative\">\n                {Array.from({ length: 20 }, (_, i) => (\n                  <div\n                    key={`burst-${i}`}\n                    className=\"absolute\"\n                    style={{\n                      width: '4px',\n                      height: '40px',\n                      background: `linear-gradient(to top, #ff1493, #ff69b4, #ffc0cb)`,\n                      transform: `rotate(${i * 18}deg)`,\n                      transformOrigin: '50% 100%',\n                      animation: `burstExplosion 1.5s ease-out ${Math.random() * 0.5}s forwards`,\n                    }}\n                  />\n                ))}\n              </div>\n            </div>\n            \n            {/* Rainbow explosion rings */}\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              {Array.from({ length: 5 }, (_, i) => (\n                <div\n                  key={`ring-${i}`}\n                  className=\"absolute border-4 rounded-full\"\n                  style={{\n                    borderColor: ['#ff1493', '#ff69b4', '#ffc0cb', '#ffb6c1', '#ffe4e1'][i],\n                    animation: `ringExpansion 2s ease-out ${i * 0.2}s forwards`,\n                    opacity: 0,\n                  }}\n                />\n              ))}\n            </div>\n            \n            {/* Background glow pulse */}\n            <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500/30 via-purple-500/30 to-red-500/30 animate-pulse\" />\n          </div>\n        )}\n        \n        {/* Twinkling stars background */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          {Array.from({ length: 20 }, (_, i) => (\n            <div\n              key={i}\n              className=\"absolute w-1 h-1 bg-white rounded-full animate-pulse opacity-60\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n                animationDelay: `${Math.random() * 3}s`,\n                animationDuration: `${2 + Math.random() * 2}s`,\n              }}\n            />\n          ))}\n        </div>\n        \n        <div className=\"text-center max-w-5xl px-8 relative z-10\">\n          {!showFinalQuestion ? (\n            <div className=\"space-y-12\">\n              {cinematicTexts.slice(0, currentTextIndex + 1).map((text, index) => (\n                <div\n                  key={index}\n                  className=\"relative\"\n                  style={{\n                    animation: `textGlow 1s ease-out ${index * 0.3}s forwards, slideInFromBottom 1.2s ease-out ${index * 0.3}s forwards`,\n                    opacity: 0,\n                  }}\n                >\n                  <p\n                    className={`font-playfair text-white leading-relaxed transition-all duration-1000 ${\n                      index === currentTextIndex \n                        ? 'text-3xl md:text-4xl lg:text-5xl opacity-100 text-shadow-glow' \n                        : 'text-2xl md:text-3xl opacity-80'\n                    }`}\n                    style={{\n                      textShadow: index === currentTextIndex \n                        ? '0 0 20px rgba(255, 255, 255, 0.8), 0 0 40px rgba(147, 51, 234, 0.6)' \n                        : '0 0 10px rgba(255, 255, 255, 0.3)',\n                      letterSpacing: '0.05em',\n                    }}\n                  >\n                    {text}\n                  </p>\n                  \n                  {/* Typing cursor effect for current text */}\n                  {index === currentTextIndex && (\n                    <span className=\"inline-block w-0.5 h-8 bg-white ml-2 animate-pulse\" />\n                  )}\n                  \n                  {/* Sparkle effect for current text */}\n                  {index === currentTextIndex && (\n                    <div className=\"absolute -inset-4 pointer-events-none\">\n                      {Array.from({ length: 5 }, (_, sparkleIndex) => (\n                        <div\n                          key={sparkleIndex}\n                          className=\"absolute text-yellow-200 animate-ping\"\n                          style={{\n                            left: `${Math.random() * 100}%`,\n                            top: `${Math.random() * 100}%`,\n                            animationDelay: `${sparkleIndex * 0.2}s`,\n                            fontSize: '12px',\n                          }}\n                        >\n                          ✨\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div \n              className=\"relative\"\n              style={{\n                animation: 'finalQuestionEntrance 2s ease-out forwards',\n                opacity: 0,\n              }}\n            >\n              {/* Romantic background glow */}\n              <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500/20 via-purple-500/20 to-red-500/20 rounded-full filter blur-3xl animate-pulse\" />\n              \n              <h1 \n                className=\"text-4xl md:text-6xl lg:text-7xl font-playfair text-white mb-16 relative z-10\"\n                style={{\n                  textShadow: '0 0 30px rgba(255, 255, 255, 0.9), 0 0 60px rgba(147, 51, 234, 0.8), 0 0 90px rgba(236, 72, 153, 0.6)',\n                  letterSpacing: '0.1em',\n                  animation: 'heartbeat 2s ease-in-out infinite',\n                }}\n              >\n                Nisa'm, Benim olur musun?\n              </h1>\n              \n              <div className=\"flex justify-center space-x-8 relative\">\n                <Button\n                  onClick={handleFinalYes}\n                  className=\"px-16 py-6 bg-gradient-to-r from-pink-500 to-red-500 hover:from-pink-600 hover:to-red-600 text-white font-inter font-bold text-2xl rounded-full transition-all duration-500 transform hover:scale-110 shadow-2xl animate-pulse-soft\"\n                >\n                  Evet ♡\n                </Button>\n                \n                {noButtonVisible && (\n                  <Button\n                    ref={noButtonRef}\n                    onMouseEnter={handleNoButtonHover}\n                    onFocus={handleNoButtonHover}\n                    className=\"px-16 py-6 bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white font-inter font-bold text-2xl rounded-full transition-all duration-300 absolute\"\n                    style={{\n                      left: `${noButtonPosition.x}px`,\n                      top: `${noButtonPosition.y}px`,\n                      transform: 'translate(-50%, -50%)',\n                    }}\n                  >\n                    Hayır\n                  </Button>\n                )}\n                \n                {showExplosion && (\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <div className=\"text-6xl animate-ping\">💥</div>\n                  </div>\n                )}\n              </div>\n              \n              {showConfetti && (\n                <div className=\"mt-8 space-y-6 relative z-10\">\n                  <div \n                    className=\"text-8xl\"\n                    style={{\n                      animation: 'celebrationBounce 1s ease-out infinite alternate, celebrationGlow 2s ease-in-out infinite',\n                    }}\n                  >\n                    💖✨💖\n                  </div>\n                  <p \n                    className=\"text-3xl md:text-4xl text-white font-playfair\"\n                    style={{\n                      textShadow: '0 0 30px rgba(255, 255, 255, 1), 0 0 60px rgba(255, 192, 203, 0.8)',\n                      animation: 'celebrationText 1.5s ease-in-out infinite alternate',\n                    }}\n                  >\n                    Seni çok seviyorum Nisa! ♡\n                  </p>\n                  \n                  {/* Additional celebration elements */}\n                  <div className=\"flex justify-center space-x-4 mt-6\">\n                    {['💕', '🌹', '💍', '👑', '💐'].map((emoji, index) => (\n                      <div\n                        key={index}\n                        className=\"text-4xl\"\n                        style={{\n                          animation: `celebrationIcons 2s ease-in-out ${index * 0.2}s infinite`,\n                        }}\n                      >\n                        {emoji}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen gradient-bg font-inter\">\n      <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n        <div className=\"w-full max-w-4xl\">\n          <div className=\"glass-effect rounded-3xl shadow-2xl p-8 md:p-12 text-center animate-fade-in\">\n            \n            <h1 className=\"font-playfair text-4xl md:text-5xl font-bold text-[var(--elegant-gray)] mb-8\">\n              Son Sayfa\n            </h1>\n            \n            <div className=\"w-32 h-0.5 bg-gradient-to-r from-[var(--purple-primary)] via-[var(--purple-accent)] to-[var(--purple-primary)] mx-auto mb-10 rounded-full opacity-70\"></div>\n            \n            {showInitialQuestion && (\n              <div className=\"mb-12\">\n                <div className=\"text-6xl heart-decoration mb-8 animate-pulse-soft\">♡</div>\n                \n                <h2 className=\"font-playfair text-3xl md:text-4xl font-bold text-[var(--purple-primary)] mb-8\">\n                  Bu sayfayı görmek için heyecanlı mısın?\n                </h2>\n                \n                <div className=\"flex flex-col md:flex-row gap-6 justify-center\">\n                  <Button\n                    onClick={handleYesClick}\n                    className=\"px-16 py-6 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white font-inter font-bold text-xl rounded-full transition-all duration-500 transform hover:scale-105 shadow-lg hover:shadow-2xl\"\n                  >\n                    Evet ♡\n                  </Button>\n                  \n                  <Button\n                    onClick={handleNoClick}\n                    className=\"px-16 py-6 bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white font-inter font-bold text-xl rounded-full transition-all duration-500 transform hover:scale-105 shadow-lg hover:shadow-2xl\"\n                  >\n                    Hayır\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            {/* Geri dönüş butonları */}\n            <div className=\"flex flex-col md:flex-row gap-4 justify-center pt-8 border-t border-[var(--purple-accent)]/20\">\n              <Button \n                onClick={() => setLocation(\"/sixth-page\")}\n                className=\"px-12 py-4 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n              >\n                ← Altıncı Sayfaya Dön\n              </Button>\n              \n              <Button \n                onClick={() => setLocation(\"/\")}\n                className=\"px-12 py-4 bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n              >\n                ← Ana Sayfaya Dön\n              </Button>\n            </div>\n          </div>\n          \n          {/* Footer Note */}\n          <div className=\"text-center mt-8\">\n            <div className=\"text-xl heart-decoration mb-2 animate-float opacity-60\">♡</div>\n            <p className=\"font-inter text-sm text-white opacity-75\">\n              Güzel kızım için son sayfa.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":23176},"client/src/pages/sixth-page.tsx":{"content":"import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport DecorativeHearts from \"@/components/decorative-hearts\";\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface Monster {\n  x: number;\n  y: number;\n  direction: 'up' | 'down' | 'left' | 'right';\n  patrolPath: Position[];\n  currentPathIndex: number;\n}\n\ninterface Obstacle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  type: 'platform' | 'spike' | 'wall';\n}\n\nexport default function SixthPage() {\n  const [, setLocation] = useLocation();\n  const [playerPosition, setPlayerPosition] = useState<Position>({ x: 40, y: 40 });\n  const [heartPosition] = useState<Position>({ x: 560, y: 400 });\n  const [gameWon, setGameWon] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [lives, setLives] = useState(3);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [secondGameStarted, setSecondGameStarted] = useState(false);\n  const [princessPos, setPrincessPos] = useState<Position>({ x: 50, y: 350 });\n  const [princePos] = useState<Position>({ x: 620, y: 180 });\n  const [secondGameWon, setSecondGameWon] = useState(false);\n  const [lostLifeMessage, setLostLifeMessage] = useState(\"\");\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const monstersRef = useRef<Monster[]>([]);\n\n  // Kompleks labirent duvarları - iki farklı yol ile kalbe ulaşma\n  const mazeWalls = [\n    // Dış duvarlar\n    { x: 0, y: 0, width: 640, height: 20 },\n    { x: 0, y: 0, width: 20, height: 480 },\n    { x: 620, y: 0, width: 20, height: 480 },\n    { x: 0, y: 460, width: 640, height: 20 },\n    \n    // Ana labirent duvarları - sol yol\n    { x: 80, y: 20, width: 20, height: 120 },\n    { x: 140, y: 80, width: 20, height: 160 },\n    { x: 80, y: 200, width: 80, height: 20 },\n    { x: 60, y: 260, width: 100, height: 20 },\n    { x: 200, y: 140, width: 20, height: 80 },\n    { x: 240, y: 60, width: 80, height: 20 },\n    { x: 280, y: 120, width: 20, height: 120 },\n    { x: 180, y: 300, width: 120, height: 20 },\n    \n    // Ana labirent duvarları - sağ yol\n    { x: 400, y: 20, width: 20, height: 100 },\n    { x: 460, y: 80, width: 20, height: 140 },\n    { x: 520, y: 40, width: 80, height: 20 },\n    { x: 380, y: 180, width: 120, height: 20 },\n    { x: 540, y: 160, width: 20, height: 120 },\n    { x: 420, y: 260, width: 100, height: 20 },\n    { x: 480, y: 320, width: 20, height: 80 },\n    \n    // Orta bölüm karmaşık duvarlar\n    { x: 240, y: 240, width: 160, height: 20 },\n    { x: 320, y: 180, width: 20, height: 80 },\n    { x: 360, y: 120, width: 20, height: 100 },\n    { x: 280, y: 300, width: 80, height: 20 },\n    { x: 340, y: 340, width: 20, height: 60 },\n    \n    // Kalp etrafındaki azaltılmış koruma duvarları\n    { x: 520, y: 380, width: 20, height: 20 },\n    { x: 580, y: 380, width: 20, height: 20 },\n  ];\n\n  // 2D Platform oyunu engelleri\n  const platformObstacles: Obstacle[] = [\n    // Ana platformlar\n    { x: 0, y: 380, width: 180, height: 35, type: 'platform' },\n    { x: 220, y: 340, width: 140, height: 25, type: 'platform' },\n    { x: 380, y: 300, width: 120, height: 25, type: 'platform' },\n    { x: 520, y: 260, width: 140, height: 25, type: 'platform' },\n    { x: 580, y: 200, width: 140, height: 25, type: 'platform' },\n    \n    // Orta platformlar\n    { x: 100, y: 320, width: 100, height: 20, type: 'platform' },\n    { x: 280, y: 280, width: 80, height: 20, type: 'platform' },\n    { x: 440, y: 240, width: 70, height: 20, type: 'platform' },\n    \n    // Duvarlar\n    { x: 180, y: 280, width: 25, height: 120, type: 'wall' },\n    { x: 360, y: 240, width: 25, height: 100, type: 'wall' },\n    { x: 500, y: 200, width: 25, height: 80, type: 'wall' },\n    \n    // Tehlikeli dikenler\n    { x: 240, y: 330, width: 35, height: 12, type: 'spike' },\n    { x: 400, y: 290, width: 30, height: 12, type: 'spike' },\n    { x: 460, y: 230, width: 30, height: 12, type: 'spike' },\n  ];\n\n  // Canavarların devriye rotaları\n  const initialMonsters: Monster[] = [\n    {\n      x: 120,\n      y: 160,\n      direction: 'right',\n      patrolPath: [\n        { x: 120, y: 160 },\n        { x: 200, y: 160 },\n        { x: 200, y: 240 },\n        { x: 120, y: 240 }\n      ],\n      currentPathIndex: 0\n    },\n    {\n      x: 440,\n      y: 120,\n      direction: 'down',\n      patrolPath: [\n        { x: 440, y: 120 },\n        { x: 440, y: 200 },\n        { x: 500, y: 200 },\n        { x: 500, y: 120 }\n      ],\n      currentPathIndex: 0\n    },\n    {\n      x: 300,\n      y: 280,\n      direction: 'left',\n      patrolPath: [\n        { x: 300, y: 280 },\n        { x: 380, y: 280 },\n        { x: 380, y: 320 },\n        { x: 300, y: 320 }\n      ],\n      currentPathIndex: 0\n    }\n  ];\n\n  // Labirent oyunu hareket kontrolleri\n  const handleKeyPress = useCallback((event: KeyboardEvent) => {\n    if (gameWon || !gameStarted) return;\n\n    const moveSpeed = 15;\n    \n    setPlayerPosition(prev => {\n      let newX = prev.x;\n      let newY = prev.y;\n      \n      switch (event.key.toLowerCase()) {\n        case 'w':\n        case 'arrowup':\n          newY = Math.max(25, prev.y - moveSpeed);\n          break;\n        case 's':\n        case 'arrowdown':\n          newY = Math.min(435, prev.y + moveSpeed);\n          break;\n        case 'a':\n        case 'arrowleft':\n          newX = Math.max(25, prev.x - moveSpeed);\n          break;\n        case 'd':\n        case 'arrowright':\n          newX = Math.min(595, prev.x + moveSpeed);\n          break;\n        default:\n          return prev;\n      }\n\n      // Duvar collision kontrolü\n      const playerSize = { width: 20, height: 20 };\n      for (const wall of mazeWalls) {\n        if (\n          newX < wall.x + wall.width &&\n          newX + playerSize.width > wall.x &&\n          newY < wall.y + wall.height &&\n          newY + playerSize.height > wall.y\n        ) {\n          return prev; // Duvara çarparsa hareket etme\n        }\n      }\n\n      return { x: newX, y: newY };\n    });\n  }, [gameWon, gameStarted]);\n\n  // 2D Platform oyunu hareket kontrolleri\n  const handlePlatformKeyPress = useCallback((event: KeyboardEvent) => {\n    if (secondGameWon || !secondGameStarted) return;\n\n    const moveSpeed = 12;\n    const jumpPower = 25;\n    \n    setPrincessPos(prev => {\n      let newX = prev.x;\n      let newY = prev.y;\n      \n      switch (event.key.toLowerCase()) {\n        case 'w':\n        case 'arrowup':\n          newY = Math.max(50, prev.y - jumpPower);\n          break;\n        case 's':\n        case 'arrowdown':\n          newY = Math.min(370, prev.y + moveSpeed);\n          break;\n        case 'a':\n        case 'arrowleft':\n          newX = Math.max(10, prev.x - moveSpeed);\n          break;\n        case 'd':\n        case 'arrowright':\n          newX = Math.min(650, prev.x + moveSpeed);\n          break;\n        default:\n          return prev;\n      }\n\n      // Platform collision kontrolü\n      const playerSize = { width: 28, height: 40 };\n      for (const obstacle of platformObstacles) {\n        if (\n          newX < obstacle.x + obstacle.width &&\n          newX + playerSize.width > obstacle.x &&\n          newY < obstacle.y + obstacle.height &&\n          newY + playerSize.height > obstacle.y\n        ) {\n          if (obstacle.type === 'spike') {\n            return { x: 50, y: 350 }; // Başlangıca dön\n          } else {\n            if (Math.abs(newX - prev.x) > Math.abs(newY - prev.y)) {\n              newX = prev.x;\n            } else {\n              newY = prev.y;\n            }\n          }\n        }\n      }\n\n      return { x: newX, y: newY };\n    });\n  }, [secondGameWon, secondGameStarted]);\n\n  // Klavye dinleyicisi\n  useEffect(() => {\n    if (secondGameStarted) {\n      window.addEventListener('keydown', handlePlatformKeyPress);\n      return () => window.removeEventListener('keydown', handlePlatformKeyPress);\n    } else {\n      window.addEventListener('keydown', handleKeyPress);\n      return () => window.removeEventListener('keydown', handleKeyPress);\n    }\n  }, [handleKeyPress, handlePlatformKeyPress, secondGameStarted]);\n\n  // Canavarları hareket ettir - optimized\n  useEffect(() => {\n    if (!gameStarted || gameWon) return;\n\n    const moveMonsters = () => {\n      setMonsters(prevMonsters => {\n        return prevMonsters.map(monster => {\n          const targetPos = monster.patrolPath[monster.currentPathIndex];\n          const deltaX = targetPos.x - monster.x;\n          const deltaY = targetPos.y - monster.y;\n          const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n          if (distance < 5) {\n            // Sonraki hedefe geç\n            const nextIndex = (monster.currentPathIndex + 1) % monster.patrolPath.length;\n            return { ...monster, currentPathIndex: nextIndex };\n          }\n\n          // Hedefe doğru hareket et - optimized speed\n          const speed = 1.2;\n          const moveX = (deltaX / distance) * speed;\n          const moveY = (deltaY / distance) * speed;\n\n          return {\n            ...monster,\n            x: monster.x + moveX,\n            y: monster.y + moveY\n          };\n        });\n      });\n    };\n\n    const interval = setInterval(moveMonsters, 60); // Slightly slower for better performance\n    return () => clearInterval(interval);\n  }, [gameStarted, gameWon]);\n\n  // Canavar collision kontrolü - optimized\n  useEffect(() => {\n    if (!gameStarted || gameWon) return;\n\n    const checkCollision = () => {\n      for (const monster of monsters) {\n        const distance = Math.sqrt(\n          (playerPosition.x - monster.x) ** 2 + \n          (playerPosition.y - monster.y) ** 2\n        );\n        \n        if (distance < 25) {\n          setLives(prev => {\n            const newLives = prev - 1;\n            if (newLives <= 0) {\n              // Oyun bitti\n              setGameStarted(false);\n              setPlayerPosition({ x: 40, y: 40 });\n              setLives(3);\n              setLostLifeMessage(\"Oyun bitti! Tekrar dene.\");\n            } else {\n              setLostLifeMessage(\"Yoksa engellere boyun mu eğeceksin?\");\n              setPlayerPosition({ x: 40, y: 40 }); // Başlangıca dön\n            }\n            setTimeout(() => setLostLifeMessage(\"\"), 2000);\n            return newLives <= 0 ? 3 : newLives;\n          });\n          break;\n        }\n      }\n    };\n\n    const timeoutId = setTimeout(checkCollision, 100); // Throttle to 100ms\n    return () => clearTimeout(timeoutId);\n  }, [playerPosition.x, playerPosition.y, gameStarted, gameWon]);\n\n  // Kalbe ulaşma kontrolü (labirent oyunu)\n  useEffect(() => {\n    if (!gameStarted || gameWon) return;\n    \n    const distance = Math.sqrt(\n      Math.pow(playerPosition.x - heartPosition.x, 2) + \n      Math.pow(playerPosition.y - heartPosition.y, 2)\n    );\n    \n    if (distance < 30) {\n      setGameWon(true);\n      setTimeout(() => setShowMessage(true), 500);\n    }\n  }, [playerPosition.x, playerPosition.y, gameStarted, gameWon]);\n\n  // Prense ulaşma kontrolü (platform oyunu)\n  useEffect(() => {\n    if (!secondGameStarted || secondGameWon) return;\n    \n    const distance = Math.sqrt(\n      Math.pow(princessPos.x - princePos.x, 2) + \n      Math.pow(princessPos.y - princePos.y, 2)\n    );\n    \n    if (distance < 45) {\n      setSecondGameWon(true);\n    }\n  }, [princessPos.x, princessPos.y, princePos.x, princePos.y, secondGameStarted]);\n\n  // Oyunu başlat\n  const startGame = () => {\n    const newMonsters = [...initialMonsters];\n    setGameStarted(true);\n    setMonsters(newMonsters);\n    monstersRef.current = newMonsters;\n    setPlayerPosition({ x: 40, y: 40 });\n    setLives(3);\n    setGameWon(false);\n    setShowMessage(false);\n    setLostLifeMessage(\"\");\n  };\n\n  const bringHeart = () => {\n    setSecondGameStarted(true);\n    setPrincessPos({ x: 50, y: 350 });\n  };\n\n  return (\n    <div className=\"min-h-screen gradient-bg font-inter\">\n      <DecorativeHearts />\n      \n      <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n        <div className=\"w-full max-w-5xl\">\n          <div className=\"glass-effect rounded-3xl shadow-2xl p-8 text-center animate-fade-in\">\n            \n            <h1 className=\"font-playfair text-4xl md:text-5xl font-bold text-[var(--elegant-gray)] mb-6\">\n              ♡\n            </h1>\n            \n            <div className=\"w-32 h-0.5 bg-gradient-to-r from-[var(--purple-primary)] via-[var(--purple-accent)] to-[var(--purple-primary)] mx-auto mb-8 rounded-full opacity-70\"></div>\n            \n            {!gameStarted && !secondGameStarted && (\n              <div className=\"mb-8\">\n                <h2 className=\"font-playfair text-3xl font-bold text-[var(--purple-primary)] mb-6\">\n                  Labirentin sonundan kalbimi bul ve bana getir. ♡\n                </h2>\n                \n                <div className=\"mb-8 max-w-3xl mx-auto\">\n                  <p className=\"font-inter text-lg text-[var(--warm-gray)] mb-6\">\n                    Prensesim Berat'înın kalbine ulaşmaya çalışıyor.  labirentte canavarlar var!\n                  </p>\n                  <div className=\"bg-gradient-to-r from-purple-500/10 to-pink-500/10 rounded-xl p-6 border border-purple-300/20 mb-6\">\n                    <p className=\"font-inter text-purple-600 font-medium mb-2\">\n                      🎮 <span className=\"font-bold\">WASD</span> veya <span className=\"font-bold\">Ok tuşları</span> - Hareket\n                    </p>\n                    <p className=\"font-inter text-red-600 font-medium mb-2\">\n                      👹 Canavarlardan kaçmayı unutma yavrum. <span className=\"font-bold\">3 canınız var</span>\n                    </p>\n                    <p className=\"font-inter text-pink-600 font-medium\">\n                      ❤️ Kalbimi bana getir aşkım ! <span className=\"font-bold\"></span> \n                    </p>\n                  </div>\n                </div>\n                \n                <Button \n                  onClick={startGame}\n                  className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-8 py-3 rounded-2xl font-semibold text-lg transition-all duration-300\"\n                >\n                  Oyunu Başlat ♡\n                </Button>\n              </div>\n            )}\n\n            {gameStarted && !secondGameStarted && (\n              <div className=\"mb-8\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <div className=\"text-left\">\n                    <p className=\"text-purple-600 font-bold\">Canlar: {\"❤️\".repeat(lives)}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-pink-600 font-bold\">Hedef: Kalbe ulaş! ♡</p>\n                  </div>\n                </div>\n\n                {lostLifeMessage && (\n                  <div className=\"bg-red-100 border-2 border-red-400 text-red-700 px-4 py-3 rounded-xl mb-4 font-bold\">\n                    {lostLifeMessage}\n                  </div>\n                )}\n                \n                {/* Labirent Oyun Alanı */}\n                <div className=\"relative mx-auto border-4 border-gray-800 rounded-2xl bg-gradient-to-b from-emerald-100 to-emerald-200 overflow-hidden\" \n                     style={{ width: '640px', height: '480px', maxWidth: '95vw' }}\n                     tabIndex={0}>\n                  \n                  {/* Labirent duvarları */}\n                  {mazeWalls.map((wall, index) => (\n                    <div\n                      key={`wall-${index}`}\n                      className=\"absolute bg-gradient-to-b from-stone-600 to-stone-800 border border-stone-900\"\n                      style={{\n                        left: `${wall.x}px`,\n                        top: `${wall.y}px`,\n                        width: `${wall.width}px`,\n                        height: `${wall.height}px`,\n                      }}\n                    />\n                  ))}\n                  \n                  {/* Prenses karakter */}\n                  <div\n                    className=\"absolute transition-all duration-100 ease-out z-20\"\n                    style={{\n                      left: `${playerPosition.x}px`,\n                      top: `${playerPosition.y}px`,\n                      width: '20px',\n                      height: '20px',\n                    }}\n                  >\n                    <div className=\"text-2xl\">👸</div>\n                  </div>\n                  \n                  {/* Canavarlar */}\n                  {monsters.map((monster, index) => (\n                    <div\n                      key={`monster-${index}`}\n                      className=\"absolute transition-all duration-100 ease-out z-10\"\n                      style={{\n                        left: `${monster.x}px`,\n                        top: `${monster.y}px`,\n                        width: '20px',\n                        height: '20px',\n                      }}\n                    >\n                      <div className=\"text-2xl animate-pulse\">👹</div>\n                    </div>\n                  ))}\n                  \n                  {/* Kalp hedef */}\n                  <div\n                    className=\"absolute z-10\"\n                    style={{\n                      left: `${heartPosition.x}px`,\n                      top: `${heartPosition.y}px`,\n                      width: '30px',\n                      height: '30px',\n                    }}\n                  >\n                    <div className=\"text-3xl animate-bounce\">❤️</div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {gameWon && showMessage && !secondGameStarted && (\n              <div className=\"mb-8\">\n                <div className=\"bg-gradient-to-r from-purple-100 to-pink-100 border-2 border-purple-400 rounded-2xl p-8 mb-6\">\n                  <h3 className=\"font-playfair text-2xl font-bold text-purple-700 mb-4\">\n                    💕 Güzel kızım kalbime ulaştın fakat bu başlangıç.\n                  </h3>\n                  <p className=\"font-inter text-lg text-purple-600 mb-6\">\n                    Şimdi kalbimi bana getir ve bana ait olduğunu hissedebileyim.\n                  </p>\n                  \n                  <Button \n                    onClick={bringHeart}\n                    className=\"bg-gradient-to-r from-pink-600 to-red-600 hover:from-pink-700 hover:to-red-700 text-white px-8 py-3 rounded-2xl font-semibold text-lg transition-all duration-300 mb-4\"\n                  >\n                    Kalbini sana getireceğim ♡\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            {secondGameStarted && (\n              <div className=\"mb-8\">\n                <h3 className=\"font-playfair text-2xl font-bold text-purple-700 mb-6\">\n                  Kalbi Prensine Götür ♡\n                </h3>\n                <p className=\"font-inter text-lg text-gray-600 mb-4\">\n                  Prenses kalbi alıp prensine götürmeye çalışıyor!\n                </p>\n                \n                {/* 2D Platform Oyun Alanı */}\n                <div className=\"relative mx-auto shadow-2xl border-4 border-gray-800 rounded-3xl bg-gradient-to-b from-blue-400 via-cyan-300 to-emerald-200 overflow-hidden\" \n                     style={{ \n                       width: '720px', \n                       height: '450px', \n                       maxWidth: '95vw',\n                       aspectRatio: '16/10'\n                     }}\n                     tabIndex={0}>\n                  \n                  {/* Arka plan */}\n                  <div className=\"absolute inset-0 rounded-3xl overflow-hidden\">\n                    {/* Dağ silüetleri */}\n                    <div className=\"absolute bottom-16 w-full\">\n                      <svg viewBox=\"0 0 720 120\" className=\"w-full h-20 opacity-20\">\n                        <polygon points=\"0,120 120,40 240,60 360,20 480,50 600,30 720,45 720,120\" fill=\"#1f2937\"/>\n                      </svg>\n                    </div>\n                    \n                    {/* Bulutlar */}\n                    <div className=\"absolute top-6 left-16 w-16 h-8 bg-white rounded-full opacity-80 animate-pulse\"></div>\n                    <div className=\"absolute top-12 right-24 w-20 h-10 bg-white rounded-full opacity-70 animate-pulse\" style={{ animationDelay: '1s' }}></div>\n                    \n                    {/* Güneş */}\n                    <div className=\"absolute top-6 right-12\">\n                      <div className=\"w-12 h-12 bg-yellow-300 rounded-full shadow-lg animate-pulse\">\n                        <div className=\"absolute inset-1 bg-yellow-200 rounded-full\"></div>\n                      </div>\n                    </div>\n                    \n                    {/* Zemin çimleri */}\n                    <div className=\"absolute bottom-0 w-full h-8 bg-gradient-to-t from-green-600 to-green-400\"></div>\n                    \n                    {/* Çiçekler */}\n                    {Array.from({ length: 12 }, (_, i) => (\n                      <div\n                        key={i}\n                        className=\"absolute bottom-2 text-sm animate-bounce\"\n                        style={{\n                          left: `${30 + i * 55}px`,\n                          animationDelay: `${i * 0.2}s`,\n                        }}\n                      >\n                        🌸\n                      </div>\n                    ))}\n                  </div>\n                  \n                  {/* Platform engelleri */}\n                  {platformObstacles.map((obstacle, index) => (\n                    <div\n                      key={`platform-obstacle-${index}`}\n                      className={`absolute z-10 ${\n                        obstacle.type === 'platform' ? 'bg-gradient-to-r from-emerald-600 to-emerald-700 border-2 border-emerald-800 shadow-lg' :\n                        obstacle.type === 'wall' ? 'bg-gradient-to-b from-stone-500 to-stone-700 border-2 border-stone-800 shadow-lg' :\n                        'bg-gradient-to-t from-red-600 to-red-400 border-2 border-red-700 shadow-lg'\n                      }`}\n                      style={{\n                        left: `${obstacle.x}px`,\n                        top: `${obstacle.y}px`,\n                        width: `${obstacle.width}px`,\n                        height: `${obstacle.height}px`,\n                        borderRadius: obstacle.type === 'spike' ? '8px 8px 0 0' : '6px',\n                      }}\n                    >\n                      {obstacle.type === 'spike' && (\n                        <div className=\"absolute -top-3 w-full flex justify-around z-20\">\n                          {Array.from({ length: Math.floor(obstacle.width / 8) }, (_, i) => (\n                            <div key={i} className=\"text-red-500 text-sm font-bold\">▲</div>\n                          ))}\n                        </div>\n                      )}\n                      {obstacle.type === 'platform' && (\n                        <div className=\"absolute -top-1 w-full h-1 bg-green-400 rounded-t shadow-sm\"></div>\n                      )}\n                    </div>\n                  ))}\n                  \n                  {/* Prenses karakter (kalbi taşıyor) */}\n                  <div\n                    className=\"absolute transition-all duration-100 ease-out z-20\"\n                    style={{\n                      left: `${princessPos.x}px`,\n                      top: `${princessPos.y}px`,\n                      width: '28px',\n                      height: '40px',\n                    }}\n                  >\n                    <div className=\"relative\">\n                      <div className=\"text-2xl\">👸</div>\n                      <div className=\"absolute -top-2 -right-2 text-lg animate-pulse\">❤️</div>\n                    </div>\n                  </div>\n                  \n                  {/* Prens hedef */}\n                  <div\n                    className=\"absolute z-10\"\n                    style={{\n                      left: `${princePos.x}px`,\n                      top: `${princePos.y}px`,\n                      width: '40px',\n                      height: '50px',\n                    }}\n                  >\n                    <div className=\"text-3xl animate-bounce\">🤴</div>\n                  </div>\n                  \n                  {secondGameWon && (\n                    <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center z-30\">\n                      <div className=\"bg-white rounded-2xl p-8 text-center\">\n                        <h4 className=\"text-2xl font-bold text-purple-700 mb-4\">\n                          💕 Kalbimi bana getirdiğin için minnettarım güzel kızım! ♡\n                        </h4>\n                        <p className=\"text-lg text-gray-600 mb-6\">\n                          Aşkımıza kavuştuk,sıra benim olmakta :)\n                        </p>\n                        <Button \n                          onClick={() => setLocation('/landing')}\n                          className=\"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300\"\n                        >\n                          2. Sayfaya Git\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"mt-6\">\n                  <p className=\"font-inter text-sm text-purple-600 font-medium\">\n                    🎮 <span className=\"font-bold\">WASD</span> - Hareket • \n                    <span className=\"font-bold text-red-600\">Dikenlere değme!</span> • \n                    🎯 Prensine git ve kalbi ver!\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {!gameStarted && !secondGameStarted && (\n              <div className=\"flex gap-4 justify-center mt-8\">\n                <Button \n                  onClick={() => setLocation('/landing')}\n                  className=\"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300\"\n                >\n                  Diğer Sayfalar\n                </Button>\n                <Button \n                  onClick={() => setLocation('/landing')}\n                  className=\"bg-gradient-to-r from-pink-600 to-red-600 hover:from-pink-700 hover:to-red-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300\"\n                >\n                  2. Sayfa\n                </Button>\n              </div>\n            )}\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":26879},"client/src/pages/third-page.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport DecorativeHearts from \"@/components/decorative-hearts\";\n\nexport default function ThirdPage() {\n  const [, setLocation] = useLocation();\n  const [heartLevel, setHeartLevel] = useState(0);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [showMessage, setShowMessage] = useState(false);\n\n  const messages = {\n    25: \"Güzel Nisa'm, seni çok seviyorum, çok güzelsin, çok tatlısın.\",\n    50: \"Sen benim akranlarım arasında gördüğüm en mükemmel şeysin. Umarım o güzel ellerini tutabilir, öpebilirim.\",\n    75: \"Bu güzelliğini, tatlılığını bana sakla. Ben sana güzel şeyler saklıyorum. Saklandığın yerden aldığım zaman hayatını güzelleştireceğim.\",\n    100: \"Evet, sayende kalbim seninle doldu.\"\n  };\n\n  const goBackToSecond = () => {\n    setLocation(\"/second-page\");\n  };\n\n  const goBackToFirst = () => {\n    setLocation(\"/\");\n  };\n\n  const fillHeart = () => {\n    if (heartLevel < 100) {\n      const newLevel = Math.min(heartLevel + 25, 100);\n      setHeartLevel(newLevel);\n      \n      const message = messages[newLevel as keyof typeof messages];\n      setCurrentMessage(message);\n      setShowMessage(true);\n      \n      // Hide message after 4 seconds\n      setTimeout(() => {\n        setShowMessage(false);\n      }, 4000);\n    }\n  };\n\n  const resetGame = () => {\n    setHeartLevel(0);\n    setCurrentMessage(\"\");\n    setShowMessage(false);\n  };\n\n  return (\n    <div className=\"min-h-screen gradient-bg font-inter\">\n      <DecorativeHearts />\n      \n      <div className=\"relative z-10 min-h-screen flex items-center justify-center px-4 py-8\">\n        <div className=\"w-full max-w-4xl\">\n          <div className=\"glass-effect rounded-3xl shadow-2xl p-8 md:p-12 text-center animate-fade-in\">\n            \n            <h1 className=\"font-playfair text-4xl md:text-5xl font-bold text-[var(--elegant-gray)] mb-8\">\n              ♡\n            </h1>\n            \n            <div className=\"w-32 h-0.5 bg-gradient-to-r from-[var(--purple-primary)] via-[var(--purple-accent)] to-[var(--purple-primary)] mx-auto mb-10 rounded-full opacity-70\"></div>\n            \n            <div className=\"mb-12\">\n              <h2 className=\"font-playfair text-2xl md:text-3xl font-bold text-[var(--purple-primary)] mb-6\">\n                Kalbimi Doldur ♡\n              </h2>\n              <p className=\"font-inter text-lg text-[var(--warm-gray)] mb-8\">\n                Kalbime tıklayarak doldur ve sana olan hislerimi açığa çıkar.\n              </p>\n            </div>\n\n            {/* Modern Heart Container */}\n            <div className=\"mb-10\">\n              <div className=\"relative inline-block\">\n                \n                {/* Magical background effects */}\n                <div className=\"absolute -inset-16 pointer-events-none\">\n                  {Array.from({ length: 12 }, (_, i) => (\n                    <div\n                      key={i}\n                      className=\"absolute w-3 h-3 bg-pink-400 rounded-full animate-pulse opacity-30\"\n                      style={{\n                        left: `${Math.random() * 100}%`,\n                        top: `${Math.random() * 100}%`,\n                        animationDelay: `${i * 0.5}s`,\n                        animationDuration: `${2 + Math.random() * 3}s`,\n                      }}\n                    />\n                  ))}\n                </div>\n                \n                {/* Modern 3D Heart Container */}\n                <div className=\"relative group\">\n                  \n                  {/* Outer glow ring */}\n                  <div className=\"absolute -inset-8 border-2 border-purple-300/20 rounded-full animate-pulse\"></div>\n                  <div className=\"absolute -inset-12 border border-pink-300/10 rounded-full animate-ping\"></div>\n                  \n                  {/* Heart Background - Modern gradient */}\n                  <div \n                    className=\"text-9xl select-none bg-gradient-to-br from-slate-700 via-purple-600 to-indigo-700 bg-clip-text text-transparent\"\n                    style={{\n                      filter: 'drop-shadow(0 0 20px rgba(147, 51, 234, 0.3))',\n                    }}\n                  >\n                    ♡\n                  </div>\n                  \n                  {/* Heart Fill - Gradient fill effect */}\n                  <div \n                    className=\"absolute inset-0 text-9xl overflow-hidden transition-all duration-1000 ease-out\"\n                    style={{\n                      clipPath: `inset(${100 - heartLevel}% 0 0 0)`,\n                      background: 'linear-gradient(45deg, #ec4899, #a855f7, #3b82f6)',\n                      WebkitBackgroundClip: 'text',\n                      WebkitTextFillColor: 'transparent',\n                      filter: 'drop-shadow(0 0 30px rgba(236, 72, 153, 0.8))',\n                    }}\n                  >\n                    ♥\n                  </div>\n                  \n                  {/* Sparkle effects around filled areas */}\n                  {heartLevel > 0 && (\n                    <div className=\"absolute inset-0 pointer-events-none\">\n                      {Array.from({ length: 8 }, (_, i) => (\n                        <div\n                          key={i}\n                          className=\"absolute w-1 h-1 bg-yellow-300 rounded-full animate-ping\"\n                          style={{\n                            left: `${40 + Math.sin(i) * 30}%`,\n                            top: `${40 + Math.cos(i) * 30}%`,\n                            animationDelay: `${i * 0.2}s`,\n                            opacity: heartLevel / 100,\n                          }}\n                        />\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* Clickable Heart Overlay */}\n                  <div \n                    className={`absolute inset-0 text-9xl cursor-pointer transition-all duration-300 group-hover:scale-110 ${\n                      heartLevel >= 100 ? 'cursor-default' : 'hover:drop-shadow-2xl'\n                    }`}\n                    onClick={fillHeart}\n                    style={{ \n                      color: 'transparent',\n                      filter: heartLevel >= 100 ? 'drop-shadow(0 0 40px rgba(236, 72, 153, 1))' : 'none'\n                    }}\n                  >\n                    ♡\n                  </div>\n                </div>\n              </div>\n              \n              {/* Modern Progress Indicator */}\n              <div className=\"mt-8\">\n                <div className=\"relative w-80 h-6 bg-gradient-to-r from-slate-800 to-slate-700 rounded-full mx-auto overflow-hidden border-2 border-purple-500/30 shadow-lg\">\n                  <div \n                    className=\"h-full bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500 transition-all duration-1000 ease-out rounded-full relative\"\n                    style={{ \n                      width: `${heartLevel}%`,\n                      boxShadow: '0 0 20px rgba(236, 72, 153, 0.6), inset 0 2px 4px rgba(255, 255, 255, 0.2)'\n                    }}\n                  >\n                    {/* Animated shine effect */}\n                    <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -skew-x-12 animate-pulse\"></div>\n                  </div>\n                  \n                  {/* Progress markers */}\n                  {[25, 50, 75, 100].map((mark) => (\n                    <div\n                      key={mark}\n                      className={`absolute top-1/2 transform -translate-y-1/2 w-2 h-2 rounded-full border-2 ${\n                        heartLevel >= mark ? 'bg-yellow-300 border-yellow-400' : 'bg-slate-600 border-slate-500'\n                      }`}\n                      style={{ left: `${mark}%`, marginLeft: '-4px' }}\n                    />\n                  ))}\n                </div>\n                \n                <div className=\"flex justify-between mt-3 text-xs text-purple-300 font-medium\">\n                  <span>0%</span>\n                  <span className=\"text-lg font-bold text-purple-400\">%{heartLevel} ♡</span>\n                  <span>100%</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Message Display */}\n            {showMessage && (\n              <div className=\"mb-8 p-6 bg-gradient-to-r from-[var(--purple-primary)]/10 to-[var(--purple-accent)]/10 rounded-2xl border border-[var(--purple-accent)]/20 animate-fade-in\">\n                <div className=\"text-2xl heart-decoration mb-3 animate-pulse-soft\">♡</div>\n                <p className=\"font-inter text-lg md:text-xl text-[var(--purple-primary)] font-medium leading-relaxed max-w-3xl mx-auto\">\n                  {currentMessage}\n                </p>\n              </div>\n            )}\n\n            {/* Current Message Display (Always Visible) */}\n            {currentMessage && !showMessage && (\n              <div className=\"mb-8 p-4 bg-[var(--purple-primary)]/5 rounded-xl\">\n                <p className=\"font-inter text-base text-[var(--warm-gray)] italic\">\n                  Son mesaj: \"{currentMessage}\"\n                </p>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"space-y-4\">\n              {heartLevel >= 100 ? (\n                <div className=\"space-y-4\">\n                  <div className=\"mb-6\">\n                    <div className=\"text-4xl animate-pulse-soft mb-4\">💖✨💖</div>\n                    <p className=\"font-playfair text-2xl text-[var(--purple-primary)] font-bold\">\n                      Kalbimi doldurdun güzelim ♡\n                    </p>\n                  </div>\n                  \n                  <div className=\"space-y-4\">\n                    <Button \n                      onClick={() => setLocation(\"/fourth-page\")}\n                      className=\"px-16 py-5 bg-gradient-to-r from-[var(--purple-primary)] to-[var(--purple-accent)] hover:from-[var(--purple-accent)] hover:to-[var(--purple-primary)] text-white font-inter font-semibold text-lg rounded-full transition-all duration-500 transform hover:scale-105 shadow-lg hover:shadow-2xl\"\n                    >\n                      Diğer Sayfaya Geç ♡\n                    </Button>\n                    \n                    <Button \n                      onClick={resetGame}\n                      className=\"px-12 py-4 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                    >\n                      Tekrar Oyna\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                <p className=\"font-inter text-[var(--warm-gray)] text-lg mb-6\">\n                  Kalbe tıkla ve içimi ısıt.\n                </p>\n              )}\n              \n              <div className=\"flex flex-col md:flex-row gap-4 justify-center\">\n                <Button \n                  onClick={goBackToSecond}\n                  className=\"px-12 py-4 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                >\n                  ← İkinci Sayfaya Dön\n                </Button>\n                \n                <Button \n                  onClick={goBackToFirst}\n                  className=\"px-12 py-4 bg-gradient-to-r from-slate-700 to-slate-800 hover:from-slate-800 hover:to-slate-900 text-white font-inter font-medium rounded-full transition-all duration-300 transform hover:scale-105\"\n                >\n                  ← Ana Sayfaya Dön\n                </Button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Footer Note */}\n          <div className=\"text-center mt-8\">\n            <div className=\"text-xl heart-decoration mb-2 animate-float opacity-60\">♡</div>\n            <p className=\"font-inter text-sm text-white opacity-75\">\n              Üçüncü sayfa - ♡\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":12306},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"GITHUB_PAGES_SETUP.md":{"content":"# 🚀 GitHub Pages Deployment Rehberi\n\n## 📋 Hazır Dosyalar\n\n✅ **dist/public/** klasörü tamamen hazır!\n✅ SPA routing için 404.html oluşturuldu\n✅ Relative paths yapılandırıldı\n✅ .nojekyll dosyası eklendi\n✅ GitHub Pages SPA redirect kodu aktif\n✅ Loading screen ve error handling mevcut\n\n## 🔄 Otomatik Deployment (Önerilen)\n\n1. **GitHub Repository'nizde Settings > Pages bölümüne gidin**\n2. **Source olarak \"GitHub Actions\" seçin**\n3. **`.github/workflows/deploy.yml` dosyası hazır**\n4. **Main/master branch'e push yaptığınızda otomatik deploy olacak**\n\n## 📁 Manuel Deployment\n\n1. **Build scripti çalıştırın:**\n   ```bash\n   chmod +x build-frontend.sh\n   ./build-frontend.sh\n   ```\n\n2. **dist/public/ klasörünün içeriğini repository'nizin root'una kopyalayın**\n3. **GitHub Settings > Pages > Source: \"Deploy from a branch\" seçin**\n4. **Branch: main/master seçin**\n\n## 🔧 Dosya Yapısı\n\nGitHub Pages için gerekli dosyalar:\n```\ndist/public/\n├── index.html          # Ana sayfa\n├── 404.html           # SPA routing için\n├── .nojekyll          # Jekyll devre dışı\n├── vite.svg           # Favicon\n└── assets/            # CSS ve JS dosyaları\n    ├── index-*.css\n    └── index-*.js\n```\n\n## 🌐 Test Etme\n\nLocal test için:\n```bash\ncd dist/public\npython -m http.server 8000\n# Tarayıcıda: http://localhost:8000\n```\n\n## 🐛 Sorun Giderme\n\n**404 Hataları için:**\n1. Repository Settings > Pages'da doğru branch seçili mi?\n2. Actions sekmesinde build başarılı mı?\n3. Browser cache temizleyin (Ctrl+F5)\n4. URL'de https:// kullanın\n\n**Asset Yüklenmiyor:**\n- Relative paths doğru yapılandırıldı\n- dist/public/assets/ klasörü tam olarak yüklendi mi?\n\n## 📍 URL Formatı\n\nSite erişim adresi:\n`https://[username].github.io/[repository-name]/`\n\n## 🎯 Final Checklist\n\n- [ ] Repository oluşturuldu\n- [ ] dist/public içeriği yüklendi\n- [ ] GitHub Pages aktif edildi\n- [ ] Site linki çalışıyor\n- [ ] Tüm sayfalar yükleniyor\n- [ ] Oyunlar çalışıyor","size_bytes":2071},"build-frontend.sh":{"content":"#!/bin/bash\n\n# GitHub Pages için frontend build script\necho \"Building frontend for GitHub Pages...\"\n\n# Dependencies yükle\nnpm install\n\n# Frontend build\nnpx vite build\n\n# GitHub Pages için 404.html oluştur (SPA routing için)\ncp dist/public/index.html dist/public/404.html\n\n# .nojekyll dosyası oluştur (GitHub Pages Jekyll'ı devre dışı bırak)\ntouch dist/public/.nojekyll\n\n# Asset path'lerini relative yap (GitHub Pages için)\nsed -i 's|=\"/assets/|=\"./assets/|g' dist/public/index.html\nsed -i 's|=\"/assets/|=\"./assets/|g' dist/public/404.html\n\n# Icon path'ini relative yap\nsed -i 's|href=\"/vite.svg\"|href=\"./vite.svg\"|g' dist/public/index.html\nsed -i 's|href=\"/vite.svg\"|href=\"./vite.svg\"|g' dist/public/404.html\n\necho \"Frontend build completed! Files are in dist/public/\"\necho \"✅ SPA routing support added (404.html)\"\necho \"✅ Jekyll disabled (.nojekyll)\"\necho \"✅ Relative paths configured\"\necho \"\"\necho \"📁 Upload the contents of dist/public/ to your GitHub repository\"\necho \"⚙️  Enable GitHub Pages in repository settings\"\necho \"🌐 Your site will be available at: https://[username].github.io/[repository-name]/\"","size_bytes":1137},"client/src/components/error-boundary.tsx":{"content":"import React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-900 via-purple-800 to-purple-700\">\n          <div className=\"text-center p-8 bg-white/10 backdrop-blur-md rounded-2xl border border-purple-300/20\">\n            <div className=\"text-6xl mb-4\">💜</div>\n            <h2 className=\"text-2xl font-bold text-white mb-4\">Bir şeyler ters gitti</h2>\n            <p className=\"text-purple-200 mb-6\">Sayfa yenilenecek ve tekrar çalışacak</p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white rounded-lg transition-colors\"\n            >\n              Sayfayı Yenile\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","size_bytes":1443}}}